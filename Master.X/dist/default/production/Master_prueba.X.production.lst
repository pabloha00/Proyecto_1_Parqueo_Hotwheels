

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 01 12:49:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  0088                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  0008                     _PORTDbits	set	8
   538  0013                     _SSPBUF	set	19
   539  0014                     _SSPCON	set	20
   540  0008                     _PORTD	set	8
   541  0006                     _PORTB	set	6
   542  0005                     _PORTA	set	5
   543  0043                     _RD3	set	67
   544  0047                     _RD7	set	71
   545  0046                     _RD6	set	70
   546  0045                     _RD5	set	69
   547  0044                     _RD4	set	68
   548  0063                     _SSPIF	set	99
   549  005E                     _PEIE	set	94
   550  005F                     _GIE	set	95
   551  008F                     _OSCCONbits	set	143
   552  0091                     _SSPCON2bits	set	145
   553  0087                     _TRISCbits	set	135
   554  0094                     _SSPSTAT	set	148
   555  0093                     _SSPADD	set	147
   556  0091                     _SSPCON2	set	145
   557  0089                     _TRISE	set	137
   558  0088                     _TRISD	set	136
   559  0086                     _TRISB	set	134
   560  0085                     _TRISA	set	133
   561  0463                     _SSPIE	set	1123
   562  043C                     _TRISC4	set	1084
   563  043B                     _TRISC3	set	1083
   564  0189                     _ANSELH	set	393
   565  0188                     _ANSEL	set	392
   566                           
   567                           	psect	cinit
   568  07F3                     start_initialization:	
   569                           ; #config settings
   570                           
   571  07F3                     __initialization:
   572                           
   573                           ; Clear objects allocated to BANK0
   574  07F3  1383               	bcf	3,7	;select IRP bank0
   575  07F4  3043               	movlw	low __pbssBANK0
   576  07F5  0084               	movwf	4
   577  07F6  3056               	movlw	low (__pbssBANK0+19)
   578  07F7  120A  158A  263D  120A  118A  	fcall	clear_ram0
   579  07FC                     end_of_initialization:	
   580                           ;End of C runtime variable initialization code
   581                           
   582  07FC                     __end_of__initialization:
   583  07FC  0183               	clrf	3
   584  07FD  120A  118A  2E07   	ljmp	_main	;jump to C main() function
   585                           
   586                           	psect	bssBANK0
   587  0043                     __pbssBANK0:
   588  0043                     _a:
   589  0043                     	ds	2
   590  0045                     _temperatura:
   591  0045                     	ds	1
   592  0046                     _con:
   593  0046                     	ds	1
   594  0047                     _CERRADO:
   595  0047                     	ds	1
   596  0048                     _DM:
   597  0048                     	ds	1
   598  0049                     _UM:
   599  0049                     	ds	1
   600  004A                     _DH:
   601  004A                     	ds	1
   602  004B                     _UH:
   603  004B                     	ds	1
   604  004C                     _C3:
   605  004C                     	ds	1
   606  004D                     _C2:
   607  004D                     	ds	1
   608  004E                     _C1:
   609  004E                     	ds	1
   610  004F                     _TEMP:
   611  004F                     	ds	1
   612  0050                     _MIN:
   613  0050                     	ds	1
   614  0051                     _HORA:
   615  0051                     	ds	1
   616  0052                     _DIA:
   617  0052                     	ds	1
   618  0053                     _BASURA:
   619  0053                     	ds	1
   620  0054                     _NUM:
   621  0054                     	ds	1
   622  0055                     _PARKH:
   623  0055                     	ds	1
   624                           
   625                           	psect	clrtext
   626  0E3D                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  0E3D  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  0E3E                     clrloop0:
   632  0E3E  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  0E3F  0A84               	incf	4,f	;increment pointer
   634  0E40  0604               	xorwf	4,w	;XOR with final address
   635  0E41  1903               	btfsc	3,2	;have we reached the end yet?
   636  0E42  3400               	retlw	0	;all done for this memory range, return
   637  0E43  0604               	xorwf	4,w	;XOR again to restore value
   638  0E44  2E3E               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackCOMMON
   641  0070                     __pcstackCOMMON:
   642  0070                     ?_setup:
   643  0070                     ?_Lcd_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_Lcd_Clear:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_Lcd_Write_String:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_conver1:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_conver:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_conver:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_LECT1:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_I2C_Master_Start:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_I2C_Master_Start:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_I2C_Master_Write:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_I2C_Master_Stop:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_I2C_Master_Stop:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_osc_config:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_osc_config:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_num_ascii:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_num_ascii:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_main:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_I2C_Master_Wait:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_I2C_Master_Wait:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Lcd_Port:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??_Lcd_Port:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_Lcd_Cmd:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_Lcd_Write_Char:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_I2C_Master_Read:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?___awdiv:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     ?___lldiv:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     Lcd_Port@a:	
   722                           ; 4 bytes @ 0x0
   723                           
   724  0070                     I2C_Master_Write@d:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     I2C_Master_Read@a:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ___awdiv@divisor:	
   731                           ; 2 bytes @ 0x0
   732                           
   733  0070                     ___lldiv@divisor:	
   734                           ; 2 bytes @ 0x0
   735                           
   736                           
   737                           ; 4 bytes @ 0x0
   738  0070                     	ds	1
   739  0071                     ??_Lcd_Cmd:
   740  0071                     ??_Lcd_Write_Char:	
   741                           ; 1 bytes @ 0x1
   742                           
   743                           
   744                           ; 1 bytes @ 0x1
   745  0071                     	ds	1
   746  0072                     ??_I2C_Master_Write:
   747  0072                     ??_I2C_Master_Read:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0072                     num_ascii@num:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0072                     osc_config@freq:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0072                     Lcd_Write_Char@temp:	
   757                           ; 1 bytes @ 0x2
   758                           
   759  0072                     ___awdiv@dividend:	
   760                           ; 1 bytes @ 0x2
   761                           
   762                           
   763                           ; 2 bytes @ 0x2
   764  0072                     	ds	1
   765  0073                     ??_LECT1:
   766  0073                     Lcd_Cmd@a:	
   767                           ; 1 bytes @ 0x3
   768                           
   769  0073                     Lcd_Write_Char@y:	
   770                           ; 1 bytes @ 0x3
   771                           
   772                           
   773                           ; 1 bytes @ 0x3
   774  0073                     	ds	1
   775  0074                     ??_Lcd_Init:
   776  0074                     ??_Lcd_Clear:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     ?_Lcd_Set_Cursor:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     ??___awdiv:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     Lcd_Set_Cursor@b:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     Lcd_Write_Char@a:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0074                     I2C_Master_Read@temp:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0074                     ___lldiv@dividend:	
   795                           ; 2 bytes @ 0x4
   796                           
   797                           
   798                           ; 4 bytes @ 0x4
   799  0074                     	ds	1
   800  0075                     ??_Lcd_Set_Cursor:
   801  0075                     ??_Lcd_Write_String:	
   802                           ; 1 bytes @ 0x5
   803                           
   804  0075                     ___awdiv@counter:	
   805                           ; 1 bytes @ 0x5
   806                           
   807                           
   808                           ; 1 bytes @ 0x5
   809  0075                     	ds	1
   810  0076                     ___awdiv@sign:
   811  0076                     Lcd_Write_String@i:	
   812                           ; 1 bytes @ 0x6
   813                           
   814                           
   815                           ; 2 bytes @ 0x6
   816  0076                     	ds	1
   817  0077                     Lcd_Set_Cursor@a:
   818  0077                     ___awdiv@quotient:	
   819                           ; 1 bytes @ 0x7
   820                           
   821                           
   822                           ; 2 bytes @ 0x7
   823  0077                     	ds	1
   824  0078                     ??___lldiv:
   825  0078                     Lcd_Set_Cursor@z:	
   826                           ; 1 bytes @ 0x8
   827                           
   828  0078                     Lcd_Write_String@a:	
   829                           ; 1 bytes @ 0x8
   830                           
   831                           
   832                           ; 1 bytes @ 0x8
   833  0078                     	ds	1
   834  0079                     ?___awmod:
   835  0079                     Lcd_Set_Cursor@y:	
   836                           ; 2 bytes @ 0x9
   837                           
   838  0079                     ___awmod@divisor:	
   839                           ; 1 bytes @ 0x9
   840                           
   841  0079                     ___lldiv@quotient:	
   842                           ; 2 bytes @ 0x9
   843                           
   844                           
   845                           ; 4 bytes @ 0x9
   846  0079                     	ds	1
   847  007A                     Lcd_Set_Cursor@temp:
   848                           
   849                           ; 1 bytes @ 0xA
   850  007A                     	ds	1
   851  007B                     ___awmod@dividend:
   852                           
   853                           ; 2 bytes @ 0xB
   854  007B                     	ds	2
   855  007D                     ??___awmod:
   856  007D                     ___lldiv@counter:	
   857                           ; 1 bytes @ 0xD
   858                           
   859                           
   860                           ; 1 bytes @ 0xD
   861  007D                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864  0020                     __pcstackBANK0:
   865  0020                     ?_I2C_Master_Init:
   866  0020                     ___awmod@counter:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0020                     I2C_Master_Init@c:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0020                     conver@temporal:	
   873                           ; 4 bytes @ 0x0
   874                           
   875                           
   876                           ; 16 bytes @ 0x0
   877  0020                     	ds	1
   878  0021                     ___awmod@sign:
   879                           
   880                           ; 1 bytes @ 0x1
   881  0021                     	ds	1
   882  0022                     ??_conver1:
   883                           
   884                           ; 1 bytes @ 0x2
   885  0022                     	ds	2
   886  0024                     ??_I2C_Master_Init:
   887                           
   888                           ; 1 bytes @ 0x4
   889  0024                     	ds	1
   890  0025                     conver1@temporal:
   891                           
   892                           ; 16 bytes @ 0x5
   893  0025                     	ds	3
   894  0028                     ??_setup:
   895                           
   896                           ; 1 bytes @ 0x8
   897  0028                     	ds	8
   898  0030                     conver@temporal_131:
   899                           
   900                           ; 16 bytes @ 0x10
   901  0030                     	ds	16
   902  0040                     ??_main:
   903                           
   904                           ; 1 bytes @ 0x20
   905  0040                     	ds	3
   906                           
   907                           	psect	maintext
   908  0607                     __pmaintext:	
   909 ;;
   910 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   911 ;;
   912 ;; *************** function _main *****************
   913 ;; Defined at:
   914 ;;		line 81 in file "main.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : B00/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0
   930 ;;      Temps:          0       3       0       0       0
   931 ;;      Totals:         0       3       0       0       0
   932 ;;Total ram usage:        3 bytes
   933 ;; Hardware stack levels required when called: 3
   934 ;; This function calls:
   935 ;;		_I2C_Master_Read
   936 ;;		_I2C_Master_Start
   937 ;;		_I2C_Master_Stop
   938 ;;		_I2C_Master_Write
   939 ;;		_LECT1
   940 ;;		_Lcd_Clear
   941 ;;		_Lcd_Init
   942 ;;		_Lcd_Set_Cursor
   943 ;;		_Lcd_Write_String
   944 ;;		_conver
   945 ;;		_conver1
   946 ;;		_setup
   947 ;; This function is called by:
   948 ;;		Startup code after reset
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _main
   954  0607                     _main:
   955  0607                     l2200:	
   956                           ;incstack = 0
   957                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   958                           
   959                           
   960                           ;main.c: 82:     setup();
   961  0607  120A  118A  22CA  120A  118A  	fcall	_setup
   962  060C                     l2202:
   963                           
   964                           ;main.c: 83:     Lcd_Init();
   965  060C  120A  118A  209E  120A  118A  	fcall	_Lcd_Init
   966  0611                     l2204:
   967                           
   968                           ;main.c: 84:     Lcd_Clear();
   969  0611  120A  158A  2661  120A  118A  	fcall	_Lcd_Clear
   970  0616                     l2206:
   971                           
   972                           ;main.c: 86:         Lcd_Clear();
   973  0616  120A  158A  2661  120A  118A  	fcall	_Lcd_Clear
   974  061B                     l2208:
   975                           
   976                           ;main.c: 87:         Lcd_Set_Cursor(1,1);
   977  061B  01F4               	clrf	Lcd_Set_Cursor@b
   978  061C  0AF4               	incf	Lcd_Set_Cursor@b,f
   979  061D  3001               	movlw	1
   980  061E  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
   981                           
   982                           ;main.c: 88:         Lcd_Write_String(conver1());
   983  0623  120A  118A  21C8  120A  118A  	fcall	_conver1
   984  0628  120A  158A  2695  120A  118A  	fcall	_Lcd_Write_String
   985  062D                     l2210:
   986                           
   987                           ;main.c: 89:         Lcd_Set_Cursor(2,1);
   988  062D  01F4               	clrf	Lcd_Set_Cursor@b
   989  062E  0AF4               	incf	Lcd_Set_Cursor@b,f
   990  062F  3002               	movlw	2
   991  0630  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
   992  0635                     l2212:
   993                           
   994                           ;main.c: 90:         Lcd_Write_String(conver());
   995  0635  120A  118A  223F  120A  118A  	fcall	_conver
   996  063A  120A  158A  2695  120A  118A  	fcall	_Lcd_Write_String
   997  063F                     l2214:
   998                           
   999                           ;main.c: 91:         LECT1();
  1000  063F  120A  118A  245D  120A  118A  	fcall	_LECT1
  1001  0644                     l2216:
  1002                           
  1003                           ;main.c: 93:         I2C_Master_Start();
  1004  0644  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1005  0649                     l2218:
  1006                           
  1007                           ;main.c: 94:         I2C_Master_Write(0x50);
  1008  0649  3050               	movlw	80
  1009  064A  00F0               	movwf	I2C_Master_Write@d
  1010  064B  3000               	movlw	0
  1011  064C  00F1               	movwf	I2C_Master_Write@d+1
  1012  064D  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1013  0652                     l2220:
  1014                           
  1015                           ;main.c: 95:         I2C_Master_Write(0);
  1016  0652  3000               	movlw	0
  1017  0653  00F0               	movwf	I2C_Master_Write@d
  1018  0654  00F1               	movwf	I2C_Master_Write@d+1
  1019  0655  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1020  065A                     l2222:
  1021                           
  1022                           ;main.c: 96:         I2C_Master_Stop();
  1023  065A  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1024  065F                     l2224:
  1025                           
  1026                           ;main.c: 97:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1027  065F  3003               	movlw	3
  1028  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0662  00C2               	movwf	??_main+2
  1031  0663  3008               	movlw	8
  1032  0664  00C1               	movwf	??_main+1
  1033  0665  3076               	movlw	118
  1034  0666  00C0               	movwf	??_main
  1035  0667                     u1257:
  1036  0667  0BC0               	decfsz	??_main,f
  1037  0668  2E67               	goto	u1257
  1038  0669  0BC1               	decfsz	??_main+1,f
  1039  066A  2E67               	goto	u1257
  1040  066B  0BC2               	decfsz	??_main+2,f
  1041  066C  2E67               	goto	u1257
  1042  066D  0000               	nop
  1043  066E                     l2226:
  1044                           
  1045                           ;main.c: 99:         I2C_Master_Start();
  1046  066E  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1047  0673                     l2228:
  1048                           
  1049                           ;main.c: 100:         I2C_Master_Write(0x51);
  1050  0673  3051               	movlw	81
  1051  0674  00F0               	movwf	I2C_Master_Write@d
  1052  0675  3000               	movlw	0
  1053  0676  00F1               	movwf	I2C_Master_Write@d+1
  1054  0677  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1055  067C                     l2230:
  1056                           
  1057                           ;main.c: 101:         PARKH = I2C_Master_Read(0);
  1058  067C  3000               	movlw	0
  1059  067D  00F0               	movwf	I2C_Master_Read@a
  1060  067E  00F1               	movwf	I2C_Master_Read@a+1
  1061  067F  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1062  0684  0870               	movf	?_I2C_Master_Read,w
  1063  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0687  00C0               	movwf	??_main
  1066  0688  0840               	movf	??_main,w
  1067  0689  00D5               	movwf	_PARKH
  1068  068A                     l2232:
  1069                           
  1070                           ;main.c: 102:         I2C_Master_Stop();
  1071  068A  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1072  068F                     l2234:
  1073                           
  1074                           ;main.c: 103:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1075  068F  3003               	movlw	3
  1076  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0692  00C2               	movwf	??_main+2
  1079  0693  3008               	movlw	8
  1080  0694  00C1               	movwf	??_main+1
  1081  0695  3076               	movlw	118
  1082  0696  00C0               	movwf	??_main
  1083  0697                     u1267:
  1084  0697  0BC0               	decfsz	??_main,f
  1085  0698  2E97               	goto	u1267
  1086  0699  0BC1               	decfsz	??_main+1,f
  1087  069A  2E97               	goto	u1267
  1088  069B  0BC2               	decfsz	??_main+2,f
  1089  069C  2E97               	goto	u1267
  1090  069D  0000               	nop
  1091  069E                     l2236:
  1092                           
  1093                           ;main.c: 105:         I2C_Master_Start();
  1094  069E  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1095  06A3                     l2238:
  1096                           
  1097                           ;main.c: 106:         I2C_Master_Write(0x60);
  1098  06A3  3060               	movlw	96
  1099  06A4  00F0               	movwf	I2C_Master_Write@d
  1100  06A5  3000               	movlw	0
  1101  06A6  00F1               	movwf	I2C_Master_Write@d+1
  1102  06A7  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1103  06AC                     l2240:
  1104                           
  1105                           ;main.c: 107:         I2C_Master_Write(CERRADO);
  1106  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1107  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1108  06AE  0847               	movf	_CERRADO,w
  1109  06AF  00C0               	movwf	??_main
  1110  06B0  01C1               	clrf	??_main+1
  1111  06B1  0840               	movf	??_main,w
  1112  06B2  00F0               	movwf	I2C_Master_Write@d
  1113  06B3  0841               	movf	??_main+1,w
  1114  06B4  00F1               	movwf	I2C_Master_Write@d+1
  1115  06B5  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1116  06BA                     l2242:
  1117                           
  1118                           ;main.c: 108:         I2C_Master_Stop();
  1119  06BA  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1120  06BF                     l2244:
  1121                           
  1122                           ;main.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1123  06BF  301A               	movlw	26
  1124  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1125  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1126  06C2  00C1               	movwf	??_main+1
  1127  06C3  30F7               	movlw	247
  1128  06C4  00C0               	movwf	??_main
  1129  06C5                     u1277:
  1130  06C5  0BC0               	decfsz	??_main,f
  1131  06C6  2EC5               	goto	u1277
  1132  06C7  0BC1               	decfsz	??_main+1,f
  1133  06C8  2EC5               	goto	u1277
  1134  06C9  2ECA               	nop2
  1135  06CA                     l2246:
  1136                           
  1137                           ;main.c: 111:         I2C_Master_Start();
  1138  06CA  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1139  06CF                     l2248:
  1140                           
  1141                           ;main.c: 112:         I2C_Master_Write(0x61);
  1142  06CF  3061               	movlw	97
  1143  06D0  00F0               	movwf	I2C_Master_Write@d
  1144  06D1  3000               	movlw	0
  1145  06D2  00F1               	movwf	I2C_Master_Write@d+1
  1146  06D3  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1147  06D8                     l2250:
  1148                           
  1149                           ;main.c: 113:         temperatura = I2C_Master_Read(0);
  1150  06D8  3000               	movlw	0
  1151  06D9  00F0               	movwf	I2C_Master_Read@a
  1152  06DA  00F1               	movwf	I2C_Master_Read@a+1
  1153  06DB  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1154  06E0  0870               	movf	?_I2C_Master_Read,w
  1155  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1156  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1157  06E3  00C0               	movwf	??_main
  1158  06E4  0840               	movf	??_main,w
  1159  06E5  00C5               	movwf	_temperatura
  1160  06E6                     l2252:
  1161                           
  1162                           ;main.c: 114:         I2C_Master_Stop();
  1163  06E6  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1164  06EB                     l2254:
  1165                           
  1166                           ;main.c: 115:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1167  06EB  301A               	movlw	26
  1168  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1169  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1170  06EE  00C1               	movwf	??_main+1
  1171  06EF  30F7               	movlw	247
  1172  06F0  00C0               	movwf	??_main
  1173  06F1                     u1287:
  1174  06F1  0BC0               	decfsz	??_main,f
  1175  06F2  2EF1               	goto	u1287
  1176  06F3  0BC1               	decfsz	??_main+1,f
  1177  06F4  2EF1               	goto	u1287
  1178  06F5  2EF6               	nop2
  1179  06F6                     l2256:
  1180                           
  1181                           ;main.c: 117:         I2C_Master_Start();
  1182  06F6  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1183  06FB                     l2258:
  1184                           
  1185                           ;main.c: 118:         I2C_Master_Write(0xD0);
  1186  06FB  30D0               	movlw	208
  1187  06FC  00F0               	movwf	I2C_Master_Write@d
  1188  06FD  3000               	movlw	0
  1189  06FE  00F1               	movwf	I2C_Master_Write@d+1
  1190  06FF  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1191  0704                     l2260:
  1192                           
  1193                           ;main.c: 119:         I2C_Master_Write(0x02);
  1194  0704  3002               	movlw	2
  1195  0705  00F0               	movwf	I2C_Master_Write@d
  1196  0706  3000               	movlw	0
  1197  0707  00F1               	movwf	I2C_Master_Write@d+1
  1198  0708  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1199  070D                     l2262:
  1200                           
  1201                           ;main.c: 120:         I2C_Master_Stop();
  1202  070D  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1203  0712                     l2264:
  1204                           
  1205                           ;main.c: 121:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1206  0712  301A               	movlw	26
  1207  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0715  00C1               	movwf	??_main+1
  1210  0716  30F7               	movlw	247
  1211  0717  00C0               	movwf	??_main
  1212  0718                     u1297:
  1213  0718  0BC0               	decfsz	??_main,f
  1214  0719  2F18               	goto	u1297
  1215  071A  0BC1               	decfsz	??_main+1,f
  1216  071B  2F18               	goto	u1297
  1217  071C  2F1D               	nop2
  1218  071D                     l2266:
  1219                           
  1220                           ;main.c: 123:         I2C_Master_Start();
  1221  071D  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1222  0722                     l2268:
  1223                           
  1224                           ;main.c: 124:         I2C_Master_Write(0xD1);
  1225  0722  30D1               	movlw	209
  1226  0723  00F0               	movwf	I2C_Master_Write@d
  1227  0724  3000               	movlw	0
  1228  0725  00F1               	movwf	I2C_Master_Write@d+1
  1229  0726  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1230  072B                     l2270:
  1231                           
  1232                           ;main.c: 125:         HORA = I2C_Master_Read(0);
  1233  072B  3000               	movlw	0
  1234  072C  00F0               	movwf	I2C_Master_Read@a
  1235  072D  00F1               	movwf	I2C_Master_Read@a+1
  1236  072E  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1237  0733  0870               	movf	?_I2C_Master_Read,w
  1238  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0736  00C0               	movwf	??_main
  1241  0737  0840               	movf	??_main,w
  1242  0738  00D1               	movwf	_HORA
  1243  0739                     l2272:
  1244                           
  1245                           ;main.c: 126:         I2C_Master_Stop();
  1246  0739  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1247  073E                     l2274:
  1248                           
  1249                           ;main.c: 127:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1250  073E  301A               	movlw	26
  1251  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0741  00C1               	movwf	??_main+1
  1254  0742  30F7               	movlw	247
  1255  0743  00C0               	movwf	??_main
  1256  0744                     u1307:
  1257  0744  0BC0               	decfsz	??_main,f
  1258  0745  2F44               	goto	u1307
  1259  0746  0BC1               	decfsz	??_main+1,f
  1260  0747  2F44               	goto	u1307
  1261  0748  2F49               	nop2
  1262  0749                     l2276:
  1263                           
  1264                           ;main.c: 129:         I2C_Master_Start();
  1265  0749  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1266  074E                     l2278:
  1267                           
  1268                           ;main.c: 130:         I2C_Master_Write(0xD0);
  1269  074E  30D0               	movlw	208
  1270  074F  00F0               	movwf	I2C_Master_Write@d
  1271  0750  3000               	movlw	0
  1272  0751  00F1               	movwf	I2C_Master_Write@d+1
  1273  0752  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1274  0757                     l2280:
  1275                           
  1276                           ;main.c: 131:         I2C_Master_Write(0x03);
  1277  0757  3003               	movlw	3
  1278  0758  00F0               	movwf	I2C_Master_Write@d
  1279  0759  3000               	movlw	0
  1280  075A  00F1               	movwf	I2C_Master_Write@d+1
  1281  075B  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1282  0760                     l2282:
  1283                           
  1284                           ;main.c: 132:         I2C_Master_Stop();
  1285  0760  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1286  0765                     l2284:
  1287                           
  1288                           ;main.c: 133:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1289  0765  301A               	movlw	26
  1290  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0768  00C1               	movwf	??_main+1
  1293  0769  30F7               	movlw	247
  1294  076A  00C0               	movwf	??_main
  1295  076B                     u1317:
  1296  076B  0BC0               	decfsz	??_main,f
  1297  076C  2F6B               	goto	u1317
  1298  076D  0BC1               	decfsz	??_main+1,f
  1299  076E  2F6B               	goto	u1317
  1300  076F  2F70               	nop2
  1301  0770                     l2286:
  1302                           
  1303                           ;main.c: 135:         I2C_Master_Start();
  1304  0770  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1305  0775                     l2288:
  1306                           
  1307                           ;main.c: 136:         I2C_Master_Write(0xD1);
  1308  0775  30D1               	movlw	209
  1309  0776  00F0               	movwf	I2C_Master_Write@d
  1310  0777  3000               	movlw	0
  1311  0778  00F1               	movwf	I2C_Master_Write@d+1
  1312  0779  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1313  077E                     l2290:
  1314                           
  1315                           ;main.c: 137:         DIA = I2C_Master_Read(0);
  1316  077E  3000               	movlw	0
  1317  077F  00F0               	movwf	I2C_Master_Read@a
  1318  0780  00F1               	movwf	I2C_Master_Read@a+1
  1319  0781  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1320  0786  0870               	movf	?_I2C_Master_Read,w
  1321  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0789  00C0               	movwf	??_main
  1324  078A  0840               	movf	??_main,w
  1325  078B  00D2               	movwf	_DIA
  1326  078C                     l2292:
  1327                           
  1328                           ;main.c: 138:         I2C_Master_Stop();
  1329  078C  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1330  0791                     l2294:
  1331                           
  1332                           ;main.c: 139:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1333  0791  301A               	movlw	26
  1334  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0794  00C1               	movwf	??_main+1
  1337  0795  30F7               	movlw	247
  1338  0796  00C0               	movwf	??_main
  1339  0797                     u1327:
  1340  0797  0BC0               	decfsz	??_main,f
  1341  0798  2F97               	goto	u1327
  1342  0799  0BC1               	decfsz	??_main+1,f
  1343  079A  2F97               	goto	u1327
  1344  079B  2F9C               	nop2
  1345  079C                     l2296:
  1346                           
  1347                           ;main.c: 141:         I2C_Master_Start();
  1348  079C  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1349  07A1                     l2298:
  1350                           
  1351                           ;main.c: 142:         I2C_Master_Write(0xD0);
  1352  07A1  30D0               	movlw	208
  1353  07A2  00F0               	movwf	I2C_Master_Write@d
  1354  07A3  3000               	movlw	0
  1355  07A4  00F1               	movwf	I2C_Master_Write@d+1
  1356  07A5  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1357  07AA                     l2300:
  1358                           
  1359                           ;main.c: 143:         I2C_Master_Write(0x01);
  1360  07AA  3001               	movlw	1
  1361  07AB  00F0               	movwf	I2C_Master_Write@d
  1362  07AC  3000               	movlw	0
  1363  07AD  00F1               	movwf	I2C_Master_Write@d+1
  1364  07AE  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1365  07B3                     l2302:
  1366                           
  1367                           ;main.c: 144:         I2C_Master_Stop();
  1368  07B3  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1369  07B8                     l2304:
  1370                           
  1371                           ;main.c: 145:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1372  07B8  301A               	movlw	26
  1373  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1374  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1375  07BB  00C1               	movwf	??_main+1
  1376  07BC  30F7               	movlw	247
  1377  07BD  00C0               	movwf	??_main
  1378  07BE                     u1337:
  1379  07BE  0BC0               	decfsz	??_main,f
  1380  07BF  2FBE               	goto	u1337
  1381  07C0  0BC1               	decfsz	??_main+1,f
  1382  07C1  2FBE               	goto	u1337
  1383  07C2  2FC3               	nop2
  1384  07C3                     l2306:
  1385                           
  1386                           ;main.c: 147:         I2C_Master_Start();
  1387  07C3  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1388  07C8                     l2308:
  1389                           
  1390                           ;main.c: 148:         I2C_Master_Write(0xD1);
  1391  07C8  30D1               	movlw	209
  1392  07C9  00F0               	movwf	I2C_Master_Write@d
  1393  07CA  3000               	movlw	0
  1394  07CB  00F1               	movwf	I2C_Master_Write@d+1
  1395  07CC  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1396  07D1                     l2310:
  1397                           
  1398                           ;main.c: 149:         MIN = I2C_Master_Read(0);
  1399  07D1  3000               	movlw	0
  1400  07D2  00F0               	movwf	I2C_Master_Read@a
  1401  07D3  00F1               	movwf	I2C_Master_Read@a+1
  1402  07D4  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1403  07D9  0870               	movf	?_I2C_Master_Read,w
  1404  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1405  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1406  07DC  00C0               	movwf	??_main
  1407  07DD  0840               	movf	??_main,w
  1408  07DE  00D0               	movwf	_MIN
  1409  07DF                     l2312:
  1410                           
  1411                           ;main.c: 150:         I2C_Master_Stop();
  1412  07DF  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1413  07E4                     l2314:
  1414                           
  1415                           ;main.c: 151:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1416  07E4  301A               	movlw	26
  1417  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1418  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1419  07E7  00C1               	movwf	??_main+1
  1420  07E8  30F7               	movlw	247
  1421  07E9  00C0               	movwf	??_main
  1422  07EA                     u1347:
  1423  07EA  0BC0               	decfsz	??_main,f
  1424  07EB  2FEA               	goto	u1347
  1425  07EC  0BC1               	decfsz	??_main+1,f
  1426  07ED  2FEA               	goto	u1347
  1427  07EE  2FEF               	nop2
  1428  07EF  2E16               	goto	l2206
  1429  07F0  120A  118A  2800   	ljmp	start
  1430  07F3                     __end_of_main:
  1431                           
  1432                           	psect	text1
  1433  02CA                     __ptext1:	
  1434 ;; *************** function _setup *****************
  1435 ;; Defined at:
  1436 ;;		line 159 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       2       0       0       0
  1453 ;;      Totals:         0       2       0       0       0
  1454 ;;Total ram usage:        2 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 2
  1457 ;; This function calls:
  1458 ;;		_I2C_Master_Init
  1459 ;;		_I2C_Master_Read
  1460 ;;		_I2C_Master_Start
  1461 ;;		_I2C_Master_Stop
  1462 ;;		_I2C_Master_Write
  1463 ;;		_osc_config
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _setup
  1471  02CA                     _setup:
  1472  02CA                     l1918:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1475                           
  1476                           
  1477                           ;main.c: 160:     ANSEL = 0;
  1478  02CA  1683               	bsf	3,5	;RP0=1, select bank3
  1479  02CB  1703               	bsf	3,6	;RP1=1, select bank3
  1480  02CC  0188               	clrf	8	;volatile
  1481                           
  1482                           ;main.c: 161:     ANSELH = 0;
  1483  02CD  0189               	clrf	9	;volatile
  1484                           
  1485                           ;main.c: 162:     TRISA = 0;
  1486  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  1487  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  1488  02D0  0185               	clrf	5	;volatile
  1489                           
  1490                           ;main.c: 163:     TRISB = 0;
  1491  02D1  0186               	clrf	6	;volatile
  1492                           
  1493                           ;main.c: 164:     TRISD = 0;
  1494  02D2  0188               	clrf	8	;volatile
  1495                           
  1496                           ;main.c: 165:     TRISE = 0;
  1497  02D3  0189               	clrf	9	;volatile
  1498                           
  1499                           ;main.c: 166:     PORTA = 0;
  1500  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1501  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1502  02D6  0185               	clrf	5	;volatile
  1503                           
  1504                           ;main.c: 167:     PORTB = 0;
  1505  02D7  0186               	clrf	6	;volatile
  1506                           
  1507                           ;main.c: 168:     PORTD = 0;
  1508  02D8  0188               	clrf	8	;volatile
  1509  02D9                     l1920:
  1510                           
  1511                           ;main.c: 169:     osc_config(8);
  1512  02D9  3008               	movlw	8
  1513  02DA  120A  158A  2706  120A  118A  	fcall	_osc_config
  1514  02DF                     l1922:
  1515                           
  1516                           ;main.c: 170:     I2C_Master_Init(100000);
  1517  02DF  3000               	movlw	0
  1518  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1519  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1520  02E2  00A3               	movwf	I2C_Master_Init@c+3
  1521  02E3  3001               	movlw	1
  1522  02E4  00A2               	movwf	I2C_Master_Init@c+2
  1523  02E5  3086               	movlw	134
  1524  02E6  00A1               	movwf	I2C_Master_Init@c+1
  1525  02E7  30A0               	movlw	160
  1526  02E8  00A0               	movwf	I2C_Master_Init@c
  1527  02E9  120A  158A  273D  120A  118A  	fcall	_I2C_Master_Init
  1528  02EE                     l1924:
  1529                           
  1530                           ;main.c: 172:     I2C_Master_Start();
  1531  02EE  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1532  02F3                     l1926:
  1533                           
  1534                           ;main.c: 173:     I2C_Master_Write(0xD0);
  1535  02F3  30D0               	movlw	208
  1536  02F4  00F0               	movwf	I2C_Master_Write@d
  1537  02F5  3000               	movlw	0
  1538  02F6  00F1               	movwf	I2C_Master_Write@d+1
  1539  02F7  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1540  02FC                     l1928:
  1541                           
  1542                           ;main.c: 174:     I2C_Master_Write(0x02);
  1543  02FC  3002               	movlw	2
  1544  02FD  00F0               	movwf	I2C_Master_Write@d
  1545  02FE  3000               	movlw	0
  1546  02FF  00F1               	movwf	I2C_Master_Write@d+1
  1547  0300  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1548  0305                     l1930:
  1549                           
  1550                           ;main.c: 175:     I2C_Master_Write(0x06);
  1551  0305  3006               	movlw	6
  1552  0306  00F0               	movwf	I2C_Master_Write@d
  1553  0307  3000               	movlw	0
  1554  0308  00F1               	movwf	I2C_Master_Write@d+1
  1555  0309  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1556  030E                     l1932:
  1557                           
  1558                           ;main.c: 176:     I2C_Master_Stop();
  1559  030E  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1560  0313                     l1934:
  1561                           
  1562                           ;main.c: 177:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1563  0313  301A               	movlw	26
  1564  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0316  00A9               	movwf	??_setup+1
  1567  0317  30F7               	movlw	247
  1568  0318  00A8               	movwf	??_setup
  1569  0319                     u1357:
  1570  0319  0BA8               	decfsz	??_setup,f
  1571  031A  2B19               	goto	u1357
  1572  031B  0BA9               	decfsz	??_setup+1,f
  1573  031C  2B19               	goto	u1357
  1574  031D  2B1E               	nop2
  1575  031E                     l1936:
  1576                           
  1577                           ;main.c: 179:     I2C_Master_Start();
  1578  031E  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1579  0323                     l1938:
  1580                           
  1581                           ;main.c: 180:     I2C_Master_Write(0xD1);
  1582  0323  30D1               	movlw	209
  1583  0324  00F0               	movwf	I2C_Master_Write@d
  1584  0325  3000               	movlw	0
  1585  0326  00F1               	movwf	I2C_Master_Write@d+1
  1586  0327  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1587  032C                     l1940:
  1588                           
  1589                           ;main.c: 181:     BASURA = I2C_Master_Read(0);
  1590  032C  3000               	movlw	0
  1591  032D  00F0               	movwf	I2C_Master_Read@a
  1592  032E  00F1               	movwf	I2C_Master_Read@a+1
  1593  032F  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1594  0334  0870               	movf	?_I2C_Master_Read,w
  1595  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0337  00A8               	movwf	??_setup
  1598  0338  0828               	movf	??_setup,w
  1599  0339  00D3               	movwf	_BASURA
  1600  033A                     l1942:
  1601                           
  1602                           ;main.c: 182:     I2C_Master_Stop();
  1603  033A  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1604  033F                     l1944:
  1605                           
  1606                           ;main.c: 183:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1607  033F  301A               	movlw	26
  1608  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0342  00A9               	movwf	??_setup+1
  1611  0343  30F7               	movlw	247
  1612  0344  00A8               	movwf	??_setup
  1613  0345                     u1367:
  1614  0345  0BA8               	decfsz	??_setup,f
  1615  0346  2B45               	goto	u1367
  1616  0347  0BA9               	decfsz	??_setup+1,f
  1617  0348  2B45               	goto	u1367
  1618  0349  2B4A               	nop2
  1619  034A                     l1946:
  1620                           
  1621                           ;main.c: 185:     I2C_Master_Start();
  1622  034A  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1623  034F                     l1948:
  1624                           
  1625                           ;main.c: 186:     I2C_Master_Write(0xD0);
  1626  034F  30D0               	movlw	208
  1627  0350  00F0               	movwf	I2C_Master_Write@d
  1628  0351  3000               	movlw	0
  1629  0352  00F1               	movwf	I2C_Master_Write@d+1
  1630  0353  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1631  0358                     l1950:
  1632                           
  1633                           ;main.c: 187:     I2C_Master_Write(0x01);
  1634  0358  3001               	movlw	1
  1635  0359  00F0               	movwf	I2C_Master_Write@d
  1636  035A  3000               	movlw	0
  1637  035B  00F1               	movwf	I2C_Master_Write@d+1
  1638  035C  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1639  0361                     l1952:
  1640                           
  1641                           ;main.c: 188:     I2C_Master_Write(0x59);
  1642  0361  3059               	movlw	89
  1643  0362  00F0               	movwf	I2C_Master_Write@d
  1644  0363  3000               	movlw	0
  1645  0364  00F1               	movwf	I2C_Master_Write@d+1
  1646  0365  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1647  036A                     l1954:
  1648                           
  1649                           ;main.c: 189:     I2C_Master_Stop();
  1650  036A  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1651  036F                     l1956:
  1652                           
  1653                           ;main.c: 190:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1654  036F  301A               	movlw	26
  1655  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0372  00A9               	movwf	??_setup+1
  1658  0373  30F7               	movlw	247
  1659  0374  00A8               	movwf	??_setup
  1660  0375                     u1377:
  1661  0375  0BA8               	decfsz	??_setup,f
  1662  0376  2B75               	goto	u1377
  1663  0377  0BA9               	decfsz	??_setup+1,f
  1664  0378  2B75               	goto	u1377
  1665  0379  2B7A               	nop2
  1666  037A                     l1958:
  1667                           
  1668                           ;main.c: 192:     I2C_Master_Start();
  1669  037A  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1670  037F                     l1960:
  1671                           
  1672                           ;main.c: 193:     I2C_Master_Write(0xD1);
  1673  037F  30D1               	movlw	209
  1674  0380  00F0               	movwf	I2C_Master_Write@d
  1675  0381  3000               	movlw	0
  1676  0382  00F1               	movwf	I2C_Master_Write@d+1
  1677  0383  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1678  0388                     l1962:
  1679                           
  1680                           ;main.c: 194:     BASURA = I2C_Master_Read(0);
  1681  0388  3000               	movlw	0
  1682  0389  00F0               	movwf	I2C_Master_Read@a
  1683  038A  00F1               	movwf	I2C_Master_Read@a+1
  1684  038B  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1685  0390  0870               	movf	?_I2C_Master_Read,w
  1686  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0393  00A8               	movwf	??_setup
  1689  0394  0828               	movf	??_setup,w
  1690  0395  00D3               	movwf	_BASURA
  1691  0396                     l1964:
  1692                           
  1693                           ;main.c: 195:     I2C_Master_Stop();
  1694  0396  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1695  039B                     l1966:
  1696                           
  1697                           ;main.c: 196:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1698  039B  301A               	movlw	26
  1699  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1700  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1701  039E  00A9               	movwf	??_setup+1
  1702  039F  30F7               	movlw	247
  1703  03A0  00A8               	movwf	??_setup
  1704  03A1                     u1387:
  1705  03A1  0BA8               	decfsz	??_setup,f
  1706  03A2  2BA1               	goto	u1387
  1707  03A3  0BA9               	decfsz	??_setup+1,f
  1708  03A4  2BA1               	goto	u1387
  1709  03A5  2BA6               	nop2
  1710  03A6                     l1968:
  1711                           
  1712                           ;main.c: 198:     I2C_Master_Start();
  1713  03A6  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1714  03AB                     l1970:
  1715                           
  1716                           ;main.c: 199:     I2C_Master_Write(0xD0);
  1717  03AB  30D0               	movlw	208
  1718  03AC  00F0               	movwf	I2C_Master_Write@d
  1719  03AD  3000               	movlw	0
  1720  03AE  00F1               	movwf	I2C_Master_Write@d+1
  1721  03AF  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1722  03B4                     l1972:
  1723                           
  1724                           ;main.c: 200:     I2C_Master_Write(0x00);
  1725  03B4  3000               	movlw	0
  1726  03B5  00F0               	movwf	I2C_Master_Write@d
  1727  03B6  00F1               	movwf	I2C_Master_Write@d+1
  1728  03B7  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1729  03BC                     l1974:
  1730                           
  1731                           ;main.c: 201:     I2C_Master_Write(0x00);
  1732  03BC  3000               	movlw	0
  1733  03BD  00F0               	movwf	I2C_Master_Write@d
  1734  03BE  00F1               	movwf	I2C_Master_Write@d+1
  1735  03BF  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1736  03C4                     l1976:
  1737                           
  1738                           ;main.c: 202:     I2C_Master_Stop();
  1739  03C4  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1740  03C9                     l1978:
  1741                           
  1742                           ;main.c: 203:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1743  03C9  301A               	movlw	26
  1744  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1745  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1746  03CC  00A9               	movwf	??_setup+1
  1747  03CD  30F7               	movlw	247
  1748  03CE  00A8               	movwf	??_setup
  1749  03CF                     u1397:
  1750  03CF  0BA8               	decfsz	??_setup,f
  1751  03D0  2BCF               	goto	u1397
  1752  03D1  0BA9               	decfsz	??_setup+1,f
  1753  03D2  2BCF               	goto	u1397
  1754  03D3  2BD4               	nop2
  1755  03D4                     l1980:
  1756                           
  1757                           ;main.c: 205:     I2C_Master_Start();
  1758  03D4  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1759  03D9                     l1982:
  1760                           
  1761                           ;main.c: 206:     I2C_Master_Write(0xD1);
  1762  03D9  30D1               	movlw	209
  1763  03DA  00F0               	movwf	I2C_Master_Write@d
  1764  03DB  3000               	movlw	0
  1765  03DC  00F1               	movwf	I2C_Master_Write@d+1
  1766  03DD  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1767  03E2                     l1984:
  1768                           
  1769                           ;main.c: 207:     BASURA = I2C_Master_Read(0);
  1770  03E2  3000               	movlw	0
  1771  03E3  00F0               	movwf	I2C_Master_Read@a
  1772  03E4  00F1               	movwf	I2C_Master_Read@a+1
  1773  03E5  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1774  03EA  0870               	movf	?_I2C_Master_Read,w
  1775  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1776  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1777  03ED  00A8               	movwf	??_setup
  1778  03EE  0828               	movf	??_setup,w
  1779  03EF  00D3               	movwf	_BASURA
  1780  03F0                     l1986:
  1781                           
  1782                           ;main.c: 208:     I2C_Master_Stop();
  1783  03F0  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1784  03F5                     l1988:
  1785                           
  1786                           ;main.c: 209:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1787  03F5  301A               	movlw	26
  1788  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1789  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1790  03F8  00A9               	movwf	??_setup+1
  1791  03F9  30F7               	movlw	247
  1792  03FA  00A8               	movwf	??_setup
  1793  03FB                     u1407:
  1794  03FB  0BA8               	decfsz	??_setup,f
  1795  03FC  2BFB               	goto	u1407
  1796  03FD  0BA9               	decfsz	??_setup+1,f
  1797  03FE  2BFB               	goto	u1407
  1798  03FF  2C00               	nop2
  1799  0400                     l1990:
  1800                           
  1801                           ;main.c: 211:     I2C_Master_Start();
  1802  0400  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1803  0405                     l1992:
  1804                           
  1805                           ;main.c: 212:     I2C_Master_Write(0xD0);
  1806  0405  30D0               	movlw	208
  1807  0406  00F0               	movwf	I2C_Master_Write@d
  1808  0407  3000               	movlw	0
  1809  0408  00F1               	movwf	I2C_Master_Write@d+1
  1810  0409  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1811  040E                     l1994:
  1812                           
  1813                           ;main.c: 213:     I2C_Master_Write(0x03);
  1814  040E  3003               	movlw	3
  1815  040F  00F0               	movwf	I2C_Master_Write@d
  1816  0410  3000               	movlw	0
  1817  0411  00F1               	movwf	I2C_Master_Write@d+1
  1818  0412  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1819  0417                     l1996:
  1820                           
  1821                           ;main.c: 214:     I2C_Master_Write(0x01);
  1822  0417  3001               	movlw	1
  1823  0418  00F0               	movwf	I2C_Master_Write@d
  1824  0419  3000               	movlw	0
  1825  041A  00F1               	movwf	I2C_Master_Write@d+1
  1826  041B  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1827  0420                     l1998:
  1828                           
  1829                           ;main.c: 215:     I2C_Master_Stop();
  1830  0420  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1831  0425                     l2000:
  1832                           
  1833                           ;main.c: 216:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1834  0425  301A               	movlw	26
  1835  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0428  00A9               	movwf	??_setup+1
  1838  0429  30F7               	movlw	247
  1839  042A  00A8               	movwf	??_setup
  1840  042B                     u1417:
  1841  042B  0BA8               	decfsz	??_setup,f
  1842  042C  2C2B               	goto	u1417
  1843  042D  0BA9               	decfsz	??_setup+1,f
  1844  042E  2C2B               	goto	u1417
  1845  042F  2C30               	nop2
  1846  0430                     l2002:
  1847                           
  1848                           ;main.c: 218:     I2C_Master_Start();
  1849  0430  120A  158A  2645  120A  118A  	fcall	_I2C_Master_Start
  1850  0435                     l2004:
  1851                           
  1852                           ;main.c: 219:     I2C_Master_Write(0xD1);
  1853  0435  30D1               	movlw	209
  1854  0436  00F0               	movwf	I2C_Master_Write@d
  1855  0437  3000               	movlw	0
  1856  0438  00F1               	movwf	I2C_Master_Write@d+1
  1857  0439  120A  158A  2657  120A  118A  	fcall	_I2C_Master_Write
  1858  043E                     l2006:
  1859                           
  1860                           ;main.c: 220:     BASURA = I2C_Master_Read(0);
  1861  043E  3000               	movlw	0
  1862  043F  00F0               	movwf	I2C_Master_Read@a
  1863  0440  00F1               	movwf	I2C_Master_Read@a+1
  1864  0441  120A  158A  26D8  120A  118A  	fcall	_I2C_Master_Read
  1865  0446  0870               	movf	?_I2C_Master_Read,w
  1866  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0449  00A8               	movwf	??_setup
  1869  044A  0828               	movf	??_setup,w
  1870  044B  00D3               	movwf	_BASURA
  1871  044C                     l2008:
  1872                           
  1873                           ;main.c: 221:     I2C_Master_Stop();
  1874  044C  120A  158A  264E  120A  118A  	fcall	_I2C_Master_Stop
  1875  0451                     l2010:
  1876                           
  1877                           ;main.c: 222:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1878  0451  301A               	movlw	26
  1879  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0454  00A9               	movwf	??_setup+1
  1882  0455  30F7               	movlw	247
  1883  0456  00A8               	movwf	??_setup
  1884  0457                     u1427:
  1885  0457  0BA8               	decfsz	??_setup,f
  1886  0458  2C57               	goto	u1427
  1887  0459  0BA9               	decfsz	??_setup+1,f
  1888  045A  2C57               	goto	u1427
  1889  045B  2C5C               	nop2
  1890  045C                     l97:
  1891  045C  0008               	return
  1892  045D                     __end_of_setup:
  1893                           
  1894                           	psect	text2
  1895  0F06                     __ptext2:	
  1896 ;; *************** function _osc_config *****************
  1897 ;; Defined at:
  1898 ;;		line 17 in file "Osc_config.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  freq            1    wreg     unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  freq            1    2[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0
  1914 ;;      Temps:          2       0       0       0       0
  1915 ;;      Totals:         3       0       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_setup
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _osc_config
  1927  0F06                     _osc_config:
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
  1931                           ;osc_config@freq stored from wreg
  1932  0F06  00F2               	movwf	osc_config@freq
  1933  0F07                     l1692:
  1934                           
  1935                           ;Osc_config.c: 17: void osc_config(uint8_t freq);Osc_config.c: 18: {;Osc_config.c: 19:  
      +                             switch(freq)
  1936  0F07  2F26               	goto	l1712
  1937  0F08                     l1694:
  1938                           
  1939                           ;Osc_config.c: 22:             OSCCONbits.IRCF=0b100;
  1940  0F08  1683               	bsf	3,5	;RP0=1, select bank1
  1941  0F09  1303               	bcf	3,6	;RP1=0, select bank1
  1942  0F0A  080F               	movf	15,w	;volatile
  1943  0F0B  398F               	andlw	-113
  1944  0F0C  3840               	iorlw	64
  1945  0F0D  008F               	movwf	15	;volatile
  1946  0F0E                     l1696:
  1947                           
  1948                           ;Osc_config.c: 23:             OSCCONbits.SCS=1;
  1949  0F0E  140F               	bsf	15,0	;volatile
  1950                           
  1951                           ;Osc_config.c: 24:             break;
  1952  0F0F  2F3C               	goto	l227
  1953  0F10                     l1698:
  1954                           
  1955                           ;Osc_config.c: 27:             OSCCONbits.IRCF=0b101;
  1956  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0F12  080F               	movf	15,w	;volatile
  1959  0F13  398F               	andlw	-113
  1960  0F14  3850               	iorlw	80
  1961  0F15  008F               	movwf	15	;volatile
  1962  0F16                     l1700:
  1963                           
  1964                           ;Osc_config.c: 28:             OSCCONbits.SCS=1;
  1965  0F16  140F               	bsf	15,0	;volatile
  1966                           
  1967                           ;Osc_config.c: 29:             break;
  1968  0F17  2F3C               	goto	l227
  1969  0F18                     l1702:
  1970                           
  1971                           ;Osc_config.c: 32:             OSCCONbits.IRCF=0b110;
  1972  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0F1A  080F               	movf	15,w	;volatile
  1975  0F1B  398F               	andlw	-113
  1976  0F1C  3860               	iorlw	96
  1977  0F1D  008F               	movwf	15	;volatile
  1978  0F1E                     l1704:
  1979                           
  1980                           ;Osc_config.c: 33:             OSCCONbits.SCS=1;
  1981  0F1E  140F               	bsf	15,0	;volatile
  1982                           
  1983                           ;Osc_config.c: 34:             break;
  1984  0F1F  2F3C               	goto	l227
  1985  0F20                     l1706:
  1986                           
  1987                           ;Osc_config.c: 37:             OSCCONbits.IRCF=0b111;
  1988  0F20  3070               	movlw	112
  1989  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  1990  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  1991  0F23  048F               	iorwf	15,f	;volatile
  1992  0F24                     l1708:
  1993                           
  1994                           ;Osc_config.c: 38:             OSCCONbits.SCS=1;
  1995  0F24  140F               	bsf	15,0	;volatile
  1996                           
  1997                           ;Osc_config.c: 39:             break;
  1998  0F25  2F3C               	goto	l227
  1999  0F26                     l1712:
  2000  0F26  0872               	movf	osc_config@freq,w
  2001  0F27  00F0               	movwf	??_osc_config
  2002  0F28  01F1               	clrf	??_osc_config+1
  2003                           
  2004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2005                           ; Switch size 1, requested type "simple"
  2006                           ; Number of cases is 1, Range of values is 0 to 0
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte            4     3 (average)
  2010                           ; direct_byte           11     8 (fixed)
  2011                           ; jumptable            260     6 (fixed)
  2012                           ;	Chosen strategy is simple_byte
  2013  0F29  0871               	movf	??_osc_config+1,w
  2014  0F2A  3A00               	xorlw	0	; case 0
  2015  0F2B  1903               	skipnz
  2016  0F2C  2F2E               	goto	l2364
  2017  0F2D  2F3C               	goto	l227
  2018  0F2E                     l2364:
  2019                           
  2020                           ; Switch size 1, requested type "simple"
  2021                           ; Number of cases is 4, Range of values is 1 to 8
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte           13     7 (average)
  2025                           ; direct_byte           35    11 (fixed)
  2026                           ; jumptable            263     9 (fixed)
  2027                           ;	Chosen strategy is simple_byte
  2028  0F2E  0870               	movf	??_osc_config,w
  2029  0F2F  3A01               	xorlw	1	; case 1
  2030  0F30  1903               	skipnz
  2031  0F31  2F08               	goto	l1694
  2032  0F32  3A03               	xorlw	3	; case 2
  2033  0F33  1903               	skipnz
  2034  0F34  2F10               	goto	l1698
  2035  0F35  3A06               	xorlw	6	; case 4
  2036  0F36  1903               	skipnz
  2037  0F37  2F18               	goto	l1702
  2038  0F38  3A0C               	xorlw	12	; case 8
  2039  0F39  1903               	skipnz
  2040  0F3A  2F20               	goto	l1706
  2041  0F3B  2F3C               	goto	l227
  2042  0F3C                     l227:
  2043  0F3C  0008               	return
  2044  0F3D                     __end_of_osc_config:
  2045                           
  2046                           	psect	text3
  2047  0E57                     __ptext3:	
  2048 ;; *************** function _I2C_Master_Write *****************
  2049 ;; Defined at:
  2050 ;;		line 65 in file "I2C.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  d               2    0[COMMON] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, pclath, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         2       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0
  2067 ;;      Totals:         2       0       0       0       0
  2068 ;;Total ram usage:        2 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 1
  2071 ;; This function calls:
  2072 ;;		_I2C_Master_Wait
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;;		_setup
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _I2C_Master_Write
  2081  0E57                     _I2C_Master_Write:
  2082  0E57                     l1668:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2085                           
  2086                           
  2087                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2088  0E57  120A  158A  266E  120A  158A  	fcall	_I2C_Master_Wait
  2089  0E5C                     l1670:
  2090                           
  2091                           ;I2C.c: 68:     SSPBUF = d;
  2092  0E5C  0870               	movf	I2C_Master_Write@d,w
  2093  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0E5F  0093               	movwf	19	;volatile
  2096  0E60                     l208:
  2097  0E60  0008               	return
  2098  0E61                     __end_of_I2C_Master_Write:
  2099                           
  2100                           	psect	text4
  2101  0E4E                     __ptext4:	
  2102 ;; *************** function _I2C_Master_Stop *****************
  2103 ;; Defined at:
  2104 ;;		line 55 in file "I2C.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0
  2121 ;;      Totals:         0       0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 1
  2125 ;; This function calls:
  2126 ;;		_I2C_Master_Wait
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;;		_setup
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _I2C_Master_Stop
  2135  0E4E                     _I2C_Master_Stop:
  2136  0E4E                     l1672:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2139                           
  2140                           
  2141                           ;I2C.c: 57:     I2C_Master_Wait();
  2142  0E4E  120A  158A  266E  120A  158A  	fcall	_I2C_Master_Wait
  2143  0E53                     l1674:
  2144                           
  2145                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2146  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  2147  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  2148  0E55  1511               	bsf	17,2	;volatile
  2149  0E56                     l205:
  2150  0E56  0008               	return
  2151  0E57                     __end_of_I2C_Master_Stop:
  2152                           
  2153                           	psect	text5
  2154  0E45                     __ptext5:	
  2155 ;; *************** function _I2C_Master_Start *****************
  2156 ;; Defined at:
  2157 ;;		line 39 in file "I2C.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 1
  2178 ;; This function calls:
  2179 ;;		_I2C_Master_Wait
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;;		_setup
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _I2C_Master_Start
  2188  0E45                     _I2C_Master_Start:
  2189  0E45                     l1664:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2192                           
  2193                           
  2194                           ;I2C.c: 41:     I2C_Master_Wait();
  2195  0E45  120A  158A  266E  120A  158A  	fcall	_I2C_Master_Wait
  2196  0E4A                     l1666:
  2197                           
  2198                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2199  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0E4C  1411               	bsf	17,0	;volatile
  2202  0E4D                     l199:
  2203  0E4D  0008               	return
  2204  0E4E                     __end_of_I2C_Master_Start:
  2205                           
  2206                           	psect	text6
  2207  0ED8                     __ptext6:	
  2208 ;; *************** function _I2C_Master_Read *****************
  2209 ;; Defined at:
  2210 ;;		line 74 in file "I2C.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  a               2    0[COMMON] unsigned short 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  temp            2    4[COMMON] unsigned short 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    0[COMMON] unsigned short 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         2       0       0       0       0
  2225 ;;      Locals:         2       0       0       0       0
  2226 ;;      Temps:          2       0       0       0       0
  2227 ;;      Totals:         6       0       0       0       0
  2228 ;;Total ram usage:        6 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 1
  2231 ;; This function calls:
  2232 ;;		_I2C_Master_Wait
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;;		_setup
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _I2C_Master_Read
  2241  0ED8                     _I2C_Master_Read:
  2242  0ED8                     l1676:	
  2243                           ;incstack = 0
  2244                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2245                           
  2246                           
  2247                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2248  0ED8  120A  158A  266E  120A  158A  	fcall	_I2C_Master_Wait
  2249  0EDD                     l1678:
  2250                           
  2251                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2252  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  2253  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  2254  0EDF  1591               	bsf	17,3	;volatile
  2255                           
  2256                           ;I2C.c: 79:     I2C_Master_Wait();
  2257  0EE0  120A  158A  266E  120A  158A  	fcall	_I2C_Master_Wait
  2258  0EE5                     l1680:
  2259                           
  2260                           ;I2C.c: 80:     temp = SSPBUF;
  2261  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0EE7  0813               	movf	19,w	;volatile
  2264  0EE8  00F2               	movwf	??_I2C_Master_Read
  2265  0EE9  01F3               	clrf	??_I2C_Master_Read+1
  2266  0EEA  0872               	movf	??_I2C_Master_Read,w
  2267  0EEB  00F4               	movwf	I2C_Master_Read@temp
  2268  0EEC  0873               	movf	??_I2C_Master_Read+1,w
  2269  0EED  00F5               	movwf	I2C_Master_Read@temp+1
  2270  0EEE                     l1682:
  2271                           
  2272                           ;I2C.c: 81:     I2C_Master_Wait();
  2273  0EEE  120A  158A  266E  120A  158A  	fcall	_I2C_Master_Wait
  2274  0EF3                     l1684:
  2275                           
  2276                           ;I2C.c: 82:     if(a == 1){
  2277  0EF3  0370               	decf	I2C_Master_Read@a,w
  2278  0EF4  0471               	iorwf	I2C_Master_Read@a+1,w
  2279  0EF5  1D03               	btfss	3,2
  2280  0EF6  2EF8               	goto	u761
  2281  0EF7  2EF9               	goto	u760
  2282  0EF8                     u761:
  2283  0EF8  2EFD               	goto	l211
  2284  0EF9                     u760:
  2285  0EF9                     l1686:
  2286                           
  2287                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2288  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0EFB  1291               	bcf	17,5	;volatile
  2291                           
  2292                           ;I2C.c: 84:     }else{
  2293  0EFC  2F00               	goto	l212
  2294  0EFD                     l211:
  2295                           
  2296                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2297  0EFD  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0EFE  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0EFF  1691               	bsf	17,5	;volatile
  2300  0F00                     l212:	
  2301                           ;I2C.c: 86:     }
  2302                           
  2303                           
  2304                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2305  0F00  1611               	bsf	17,4	;volatile
  2306  0F01                     l1688:
  2307                           
  2308                           ;I2C.c: 88:     return temp;
  2309  0F01  0875               	movf	I2C_Master_Read@temp+1,w
  2310  0F02  00F1               	movwf	?_I2C_Master_Read+1
  2311  0F03  0874               	movf	I2C_Master_Read@temp,w
  2312  0F04  00F0               	movwf	?_I2C_Master_Read
  2313  0F05                     l213:
  2314  0F05  0008               	return
  2315  0F06                     __end_of_I2C_Master_Read:
  2316                           
  2317                           	psect	text7
  2318  0E6E                     __ptext7:	
  2319 ;; *************** function _I2C_Master_Wait *****************
  2320 ;; Defined at:
  2321 ;;		line 32 in file "I2C.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_I2C_Master_Start
  2345 ;;		_I2C_Master_Stop
  2346 ;;		_I2C_Master_Write
  2347 ;;		_I2C_Master_Read
  2348 ;;		_I2C_Master_RepeatedStart
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _I2C_Master_Wait
  2354  0E6E                     _I2C_Master_Wait:
  2355  0E6E                     l1626:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2358                           
  2359  0E6E                     l193:	
  2360                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2361                           
  2362  0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0E70  1914               	btfsc	20,2	;volatile
  2365  0E71  2E73               	goto	u631
  2366  0E72  2E74               	goto	u630
  2367  0E73                     u631:
  2368  0E73  2E6E               	goto	l193
  2369  0E74                     u630:
  2370  0E74                     l1628:
  2371  0E74  0811               	movf	17,w	;volatile
  2372  0E75  391F               	andlw	31
  2373  0E76  1D03               	btfss	3,2
  2374  0E77  2E79               	goto	u641
  2375  0E78  2E7A               	goto	u640
  2376  0E79                     u641:
  2377  0E79  2E6E               	goto	l193
  2378  0E7A                     u640:
  2379  0E7A                     l196:
  2380  0E7A  0008               	return
  2381  0E7B                     __end_of_I2C_Master_Wait:
  2382                           
  2383                           	psect	text8
  2384  0F3D                     __ptext8:	
  2385 ;; *************** function _I2C_Master_Init *****************
  2386 ;; Defined at:
  2387 ;;		line 16 in file "I2C.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  c               4    0[BANK0 ] const unsigned long 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       4       0       0       0
  2402 ;;      Locals:         0       0       0       0       0
  2403 ;;      Temps:          0       4       0       0       0
  2404 ;;      Totals:         0       8       0       0       0
  2405 ;;Total ram usage:        8 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 1
  2408 ;; This function calls:
  2409 ;;		___lldiv
  2410 ;; This function is called by:
  2411 ;;		_setup
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function _I2C_Master_Init
  2417  0F3D                     _I2C_Master_Init:
  2418  0F3D                     l1718:	
  2419                           ;incstack = 0
  2420                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2421                           
  2422                           
  2423                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2424  0F3D  3028               	movlw	40
  2425  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0F40  0094               	movwf	20	;volatile
  2428  0F41                     l1720:
  2429                           
  2430                           ;I2C.c: 19:     SSPCON2 = 0;
  2431  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  2432  0F42  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0F43  0191               	clrf	17	;volatile
  2434  0F44                     l1722:
  2435                           
  2436                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2437  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0F46  0820               	movf	I2C_Master_Init@c,w
  2440  0F47  00A4               	movwf	??_I2C_Master_Init
  2441  0F48  0821               	movf	I2C_Master_Init@c+1,w
  2442  0F49  00A5               	movwf	??_I2C_Master_Init+1
  2443  0F4A  0822               	movf	I2C_Master_Init@c+2,w
  2444  0F4B  00A6               	movwf	??_I2C_Master_Init+2
  2445  0F4C  0823               	movf	I2C_Master_Init@c+3,w
  2446  0F4D  00A7               	movwf	??_I2C_Master_Init+3
  2447  0F4E  3002               	movlw	2
  2448  0F4F                     u775:
  2449  0F4F  1003               	clrc
  2450  0F50  0DA4               	rlf	??_I2C_Master_Init,f
  2451  0F51  0DA5               	rlf	??_I2C_Master_Init+1,f
  2452  0F52  0DA6               	rlf	??_I2C_Master_Init+2,f
  2453  0F53  0DA7               	rlf	??_I2C_Master_Init+3,f
  2454  0F54                     u770:
  2455  0F54  3EFF               	addlw	-1
  2456  0F55  1D03               	skipz
  2457  0F56  2F4F               	goto	u775
  2458  0F57  0827               	movf	??_I2C_Master_Init+3,w
  2459  0F58  00F3               	movwf	___lldiv@divisor+3
  2460  0F59  0826               	movf	??_I2C_Master_Init+2,w
  2461  0F5A  00F2               	movwf	___lldiv@divisor+2
  2462  0F5B  0825               	movf	??_I2C_Master_Init+1,w
  2463  0F5C  00F1               	movwf	___lldiv@divisor+1
  2464  0F5D  0824               	movf	??_I2C_Master_Init,w
  2465  0F5E  00F0               	movwf	___lldiv@divisor
  2466  0F5F  3000               	movlw	0
  2467  0F60  00F7               	movwf	___lldiv@dividend+3
  2468  0F61  307A               	movlw	122
  2469  0F62  00F6               	movwf	___lldiv@dividend+2
  2470  0F63  3012               	movlw	18
  2471  0F64  00F5               	movwf	___lldiv@dividend+1
  2472  0F65  3000               	movlw	0
  2473  0F66  00F4               	movwf	___lldiv@dividend
  2474  0F67  120A  118A  20FB  120A  158A  	fcall	___lldiv
  2475  0F6C  0870               	movf	?___lldiv,w
  2476  0F6D  3EFF               	addlw	255
  2477  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  2478  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  2479  0F70  0093               	movwf	19	;volatile
  2480  0F71                     l1724:
  2481                           
  2482                           ;I2C.c: 21:     SSPSTAT = 0;
  2483  0F71  0194               	clrf	20	;volatile
  2484  0F72                     l1726:
  2485                           
  2486                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2487  0F72  1587               	bsf	7,3	;volatile
  2488  0F73                     l1728:
  2489                           
  2490                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2491  0F73  1607               	bsf	7,4	;volatile
  2492  0F74                     l190:
  2493  0F74  0008               	return
  2494  0F75                     __end_of_I2C_Master_Init:
  2495                           
  2496                           	psect	text9
  2497  00FB                     __ptext9:	
  2498 ;; *************** function ___lldiv *****************
  2499 ;; Defined at:
  2500 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  divisor         4    0[COMMON] unsigned long 
  2503 ;;  dividend        4    4[COMMON] unsigned long 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  quotient        4    9[COMMON] unsigned long 
  2506 ;;  counter         1   13[COMMON] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  4    0[COMMON] unsigned long 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         8       0       0       0       0
  2517 ;;      Locals:         5       0       0       0       0
  2518 ;;      Temps:          1       0       0       0       0
  2519 ;;      Totals:        14       0       0       0       0
  2520 ;;Total ram usage:       14 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_I2C_Master_Init
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function ___lldiv
  2531  00FB                     ___lldiv:
  2532  00FB                     l1640:	
  2533                           ;incstack = 0
  2534                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2535                           
  2536  00FB  3000               	movlw	0
  2537  00FC  00FC               	movwf	___lldiv@quotient+3
  2538  00FD  3000               	movlw	0
  2539  00FE  00FB               	movwf	___lldiv@quotient+2
  2540  00FF  3000               	movlw	0
  2541  0100  00FA               	movwf	___lldiv@quotient+1
  2542  0101  3000               	movlw	0
  2543  0102  00F9               	movwf	___lldiv@quotient
  2544  0103  0873               	movf	___lldiv@divisor+3,w
  2545  0104  0472               	iorwf	___lldiv@divisor+2,w
  2546  0105  0471               	iorwf	___lldiv@divisor+1,w
  2547  0106  0470               	iorwf	___lldiv@divisor,w
  2548  0107  1903               	skipnz
  2549  0108  290A               	goto	u691
  2550  0109  290B               	goto	u690
  2551  010A                     u691:
  2552  010A  2958               	goto	l1660
  2553  010B                     u690:
  2554  010B                     l1642:
  2555  010B  01FD               	clrf	___lldiv@counter
  2556  010C  0AFD               	incf	___lldiv@counter,f
  2557  010D  291B               	goto	l1646
  2558  010E                     l1644:
  2559  010E  3001               	movlw	1
  2560  010F  00F8               	movwf	??___lldiv
  2561  0110                     u705:
  2562  0110  1003               	clrc
  2563  0111  0DF0               	rlf	___lldiv@divisor,f
  2564  0112  0DF1               	rlf	___lldiv@divisor+1,f
  2565  0113  0DF2               	rlf	___lldiv@divisor+2,f
  2566  0114  0DF3               	rlf	___lldiv@divisor+3,f
  2567  0115  0BF8               	decfsz	??___lldiv,f
  2568  0116  2910               	goto	u705
  2569  0117  3001               	movlw	1
  2570  0118  00F8               	movwf	??___lldiv
  2571  0119  0878               	movf	??___lldiv,w
  2572  011A  07FD               	addwf	___lldiv@counter,f
  2573  011B                     l1646:
  2574  011B  1FF3               	btfss	___lldiv@divisor+3,7
  2575  011C  291E               	goto	u711
  2576  011D  291F               	goto	u710
  2577  011E                     u711:
  2578  011E  290E               	goto	l1644
  2579  011F                     u710:
  2580  011F                     l1648:
  2581  011F  3001               	movlw	1
  2582  0120  00F8               	movwf	??___lldiv
  2583  0121                     u725:
  2584  0121  1003               	clrc
  2585  0122  0DF9               	rlf	___lldiv@quotient,f
  2586  0123  0DFA               	rlf	___lldiv@quotient+1,f
  2587  0124  0DFB               	rlf	___lldiv@quotient+2,f
  2588  0125  0DFC               	rlf	___lldiv@quotient+3,f
  2589  0126  0BF8               	decfsz	??___lldiv,f
  2590  0127  2921               	goto	u725
  2591  0128                     l1650:
  2592  0128  0873               	movf	___lldiv@divisor+3,w
  2593  0129  0277               	subwf	___lldiv@dividend+3,w
  2594  012A  1D03               	skipz
  2595  012B  2936               	goto	u735
  2596  012C  0872               	movf	___lldiv@divisor+2,w
  2597  012D  0276               	subwf	___lldiv@dividend+2,w
  2598  012E  1D03               	skipz
  2599  012F  2936               	goto	u735
  2600  0130  0871               	movf	___lldiv@divisor+1,w
  2601  0131  0275               	subwf	___lldiv@dividend+1,w
  2602  0132  1D03               	skipz
  2603  0133  2936               	goto	u735
  2604  0134  0870               	movf	___lldiv@divisor,w
  2605  0135  0274               	subwf	___lldiv@dividend,w
  2606  0136                     u735:
  2607  0136  1C03               	skipc
  2608  0137  2939               	goto	u731
  2609  0138  293A               	goto	u730
  2610  0139                     u731:
  2611  0139  2949               	goto	l1656
  2612  013A                     u730:
  2613  013A                     l1652:
  2614  013A  0870               	movf	___lldiv@divisor,w
  2615  013B  02F4               	subwf	___lldiv@dividend,f
  2616  013C  0871               	movf	___lldiv@divisor+1,w
  2617  013D  1C03               	skipc
  2618  013E  0F71               	incfsz	___lldiv@divisor+1,w
  2619  013F  02F5               	subwf	___lldiv@dividend+1,f
  2620  0140  0872               	movf	___lldiv@divisor+2,w
  2621  0141  1C03               	skipc
  2622  0142  0F72               	incfsz	___lldiv@divisor+2,w
  2623  0143  02F6               	subwf	___lldiv@dividend+2,f
  2624  0144  0873               	movf	___lldiv@divisor+3,w
  2625  0145  1C03               	skipc
  2626  0146  0F73               	incfsz	___lldiv@divisor+3,w
  2627  0147  02F7               	subwf	___lldiv@dividend+3,f
  2628  0148                     l1654:
  2629  0148  1479               	bsf	___lldiv@quotient,0
  2630  0149                     l1656:
  2631  0149  3001               	movlw	1
  2632  014A                     u745:
  2633  014A  1003               	clrc
  2634  014B  0CF3               	rrf	___lldiv@divisor+3,f
  2635  014C  0CF2               	rrf	___lldiv@divisor+2,f
  2636  014D  0CF1               	rrf	___lldiv@divisor+1,f
  2637  014E  0CF0               	rrf	___lldiv@divisor,f
  2638  014F  3EFF               	addlw	-1
  2639  0150  1D03               	skipz
  2640  0151  294A               	goto	u745
  2641  0152                     l1658:
  2642  0152  3001               	movlw	1
  2643  0153  02FD               	subwf	___lldiv@counter,f
  2644  0154  1D03               	btfss	3,2
  2645  0155  2957               	goto	u751
  2646  0156  2958               	goto	u750
  2647  0157                     u751:
  2648  0157  291F               	goto	l1648
  2649  0158                     u750:
  2650  0158                     l1660:
  2651  0158  087C               	movf	___lldiv@quotient+3,w
  2652  0159  00F3               	movwf	?___lldiv+3
  2653  015A  087B               	movf	___lldiv@quotient+2,w
  2654  015B  00F2               	movwf	?___lldiv+2
  2655  015C  087A               	movf	___lldiv@quotient+1,w
  2656  015D  00F1               	movwf	?___lldiv+1
  2657  015E  0879               	movf	___lldiv@quotient,w
  2658  015F  00F0               	movwf	?___lldiv
  2659  0160                     l404:
  2660  0160  0008               	return
  2661  0161                     __end_of___lldiv:
  2662                           
  2663                           	psect	text10
  2664  01C8                     __ptext10:	
  2665 ;; *************** function _conver1 *****************
  2666 ;; Defined at:
  2667 ;;		line 268 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  temporal       16    5[BANK0 ] unsigned char [16]
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      PTR const unsigned char 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0      16       0       0       0
  2683 ;;      Temps:          0       3       0       0       0
  2684 ;;      Totals:         0      19       0       0       0
  2685 ;;Total ram usage:       19 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 1
  2688 ;; This function calls:
  2689 ;;		___awdiv
  2690 ;;		___awmod
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           
  2697                           ;psect for function _conver1
  2698  01C8                     _conver1:
  2699  01C8                     l2044:	
  2700                           ;incstack = 0
  2701                           ; Regs used in _conver1: [wreg+status,2+status,0+pclath+cstack]
  2702                           
  2703                           
  2704                           ;main.c: 270:     char temporal[16];;main.c: 271:     temporal[0] = C1;
  2705  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2706  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2707  01CA  084E               	movf	_C1,w
  2708  01CB  00A2               	movwf	??_conver1
  2709  01CC  0822               	movf	??_conver1,w
  2710  01CD  00A5               	movwf	conver1@temporal
  2711                           
  2712                           ;main.c: 272:     temporal[1] = C2;
  2713  01CE  084D               	movf	_C2,w
  2714  01CF  00A2               	movwf	??_conver1
  2715  01D0  0822               	movf	??_conver1,w
  2716  01D1  00A6               	movwf	conver1@temporal+1
  2717                           
  2718                           ;main.c: 273:     temporal[2] = C3;
  2719  01D2  084C               	movf	_C3,w
  2720  01D3  00A2               	movwf	??_conver1
  2721  01D4  0822               	movf	??_conver1,w
  2722  01D5  00A7               	movwf	conver1@temporal+2
  2723                           
  2724                           ;main.c: 274:     temporal[3] = 0x2E;
  2725  01D6  302E               	movlw	46
  2726  01D7  00A2               	movwf	??_conver1
  2727  01D8  0822               	movf	??_conver1,w
  2728  01D9  00A8               	movwf	conver1@temporal+3
  2729                           
  2730                           ;main.c: 275:     temporal[4] = 0x20;
  2731  01DA  3020               	movlw	32
  2732  01DB  00A2               	movwf	??_conver1
  2733  01DC  0822               	movf	??_conver1,w
  2734  01DD  00A9               	movwf	conver1@temporal+4
  2735                           
  2736                           ;main.c: 276:     temporal[5] = DH;
  2737  01DE  084A               	movf	_DH,w
  2738  01DF  00A2               	movwf	??_conver1
  2739  01E0  0822               	movf	??_conver1,w
  2740  01E1  00AA               	movwf	conver1@temporal+5
  2741                           
  2742                           ;main.c: 277:     temporal[6] = UH;
  2743  01E2  084B               	movf	_UH,w
  2744  01E3  00A2               	movwf	??_conver1
  2745  01E4  0822               	movf	??_conver1,w
  2746  01E5  00AB               	movwf	conver1@temporal+6
  2747                           
  2748                           ;main.c: 278:     temporal[7] = 0x3A;
  2749  01E6  303A               	movlw	58
  2750  01E7  00A2               	movwf	??_conver1
  2751  01E8  0822               	movf	??_conver1,w
  2752  01E9  00AC               	movwf	conver1@temporal+7
  2753                           
  2754                           ;main.c: 279:     temporal[8] = DM;
  2755  01EA  0848               	movf	_DM,w
  2756  01EB  00A2               	movwf	??_conver1
  2757  01EC  0822               	movf	??_conver1,w
  2758  01ED  00AD               	movwf	conver1@temporal+8
  2759                           
  2760                           ;main.c: 280:     temporal[9] = UM;
  2761  01EE  0849               	movf	_UM,w
  2762  01EF  00A2               	movwf	??_conver1
  2763  01F0  0822               	movf	??_conver1,w
  2764  01F1  00AE               	movwf	conver1@temporal+9
  2765                           
  2766                           ;main.c: 281:     temporal[10] = 0x20;
  2767  01F2  3020               	movlw	32
  2768  01F3  00A2               	movwf	??_conver1
  2769  01F4  0822               	movf	??_conver1,w
  2770  01F5  00AF               	movwf	conver1@temporal+10
  2771  01F6                     l2046:
  2772                           
  2773                           ;main.c: 282:     temporal[11] = ((temperatura/10)%10+0x30);
  2774  01F6  300A               	movlw	10
  2775  01F7  00F9               	movwf	___awmod@divisor
  2776  01F8  3000               	movlw	0
  2777  01F9  00FA               	movwf	___awmod@divisor+1
  2778  01FA  300A               	movlw	10
  2779  01FB  00F0               	movwf	___awdiv@divisor
  2780  01FC  3000               	movlw	0
  2781  01FD  00F1               	movwf	___awdiv@divisor+1
  2782  01FE  0845               	movf	_temperatura,w
  2783  01FF  00A2               	movwf	??_conver1
  2784  0200  01A3               	clrf	??_conver1+1
  2785  0201  0822               	movf	??_conver1,w
  2786  0202  00F2               	movwf	___awdiv@dividend
  2787  0203  0823               	movf	??_conver1+1,w
  2788  0204  00F3               	movwf	___awdiv@dividend+1
  2789  0205  120A  118A  2161  120A  118A  	fcall	___awdiv
  2790  020A  0871               	movf	?___awdiv+1,w
  2791  020B  00FC               	movwf	___awmod@dividend+1
  2792  020C  0870               	movf	?___awdiv,w
  2793  020D  00FB               	movwf	___awmod@dividend
  2794  020E  120A  118A  2043  120A  118A  	fcall	___awmod
  2795  0213  0879               	movf	?___awmod,w
  2796  0214  3E30               	addlw	48
  2797  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0217  00A4               	movwf	??_conver1+2
  2800  0218  0824               	movf	??_conver1+2,w
  2801  0219  00B0               	movwf	conver1@temporal+11
  2802  021A                     l2048:
  2803                           
  2804                           ;main.c: 283:     temporal[12] = ((temperatura%10)+0x30);
  2805  021A  300A               	movlw	10
  2806  021B  00F9               	movwf	___awmod@divisor
  2807  021C  3000               	movlw	0
  2808  021D  00FA               	movwf	___awmod@divisor+1
  2809  021E  0845               	movf	_temperatura,w
  2810  021F  00A2               	movwf	??_conver1
  2811  0220  01A3               	clrf	??_conver1+1
  2812  0221  0822               	movf	??_conver1,w
  2813  0222  00FB               	movwf	___awmod@dividend
  2814  0223  0823               	movf	??_conver1+1,w
  2815  0224  00FC               	movwf	___awmod@dividend+1
  2816  0225  120A  118A  2043  120A  118A  	fcall	___awmod
  2817  022A  0879               	movf	?___awmod,w
  2818  022B  3E30               	addlw	48
  2819  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2820  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2821  022E  00A4               	movwf	??_conver1+2
  2822  022F  0824               	movf	??_conver1+2,w
  2823  0230  00B1               	movwf	conver1@temporal+12
  2824                           
  2825                           ;main.c: 284:     temporal[13] = 0xDF;
  2826  0231  30DF               	movlw	223
  2827  0232  00A2               	movwf	??_conver1
  2828  0233  0822               	movf	??_conver1,w
  2829  0234  00B2               	movwf	conver1@temporal+13
  2830                           
  2831                           ;main.c: 285:     temporal[14] = 0x43;
  2832  0235  3043               	movlw	67
  2833  0236  00A2               	movwf	??_conver1
  2834  0237  0822               	movf	??_conver1,w
  2835  0238  00B3               	movwf	conver1@temporal+14
  2836                           
  2837                           ;main.c: 286:     temporal[15] = 0x20;
  2838  0239  3020               	movlw	32
  2839  023A  00A2               	movwf	??_conver1
  2840  023B  0822               	movf	??_conver1,w
  2841  023C  00B4               	movwf	conver1@temporal+15
  2842                           
  2843                           ;main.c: 287:     return temporal;
  2844  023D  3025               	movlw	(low (conver1@temporal| 0))& (0+255)
  2845  023E                     l105:
  2846  023E  0008               	return
  2847  023F                     __end_of_conver1:
  2848                           
  2849                           	psect	text11
  2850  0043                     __ptext11:	
  2851 ;; *************** function ___awmod *****************
  2852 ;; Defined at:
  2853 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  divisor         2    9[COMMON] int 
  2856 ;;  dividend        2   11[COMMON] int 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  sign            1    1[BANK0 ] unsigned char 
  2859 ;;  counter         1    0[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    9[COMMON] int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         4       0       0       0       0
  2870 ;;      Locals:         0       2       0       0       0
  2871 ;;      Temps:          1       0       0       0       0
  2872 ;;      Totals:         5       2       0       0       0
  2873 ;;Total ram usage:        7 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_conver1
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function ___awmod
  2884  0043                     ___awmod:
  2885  0043                     l1880:	
  2886                           ;incstack = 0
  2887                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2888                           
  2889  0043  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0044  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0045  01A1               	clrf	___awmod@sign
  2892  0046                     l1882:
  2893  0046  1FFC               	btfss	___awmod@dividend+1,7
  2894  0047  2849               	goto	u891
  2895  0048  284A               	goto	u890
  2896  0049                     u891:
  2897  0049  2851               	goto	l1888
  2898  004A                     u890:
  2899  004A                     l1884:
  2900  004A  09FB               	comf	___awmod@dividend,f
  2901  004B  09FC               	comf	___awmod@dividend+1,f
  2902  004C  0AFB               	incf	___awmod@dividend,f
  2903  004D  1903               	skipnz
  2904  004E  0AFC               	incf	___awmod@dividend+1,f
  2905  004F                     l1886:
  2906  004F  01A1               	clrf	___awmod@sign
  2907  0050  0AA1               	incf	___awmod@sign,f
  2908  0051                     l1888:
  2909  0051  1FFA               	btfss	___awmod@divisor+1,7
  2910  0052  2854               	goto	u901
  2911  0053  2855               	goto	u900
  2912  0054                     u901:
  2913  0054  285A               	goto	l1892
  2914  0055                     u900:
  2915  0055                     l1890:
  2916  0055  09F9               	comf	___awmod@divisor,f
  2917  0056  09FA               	comf	___awmod@divisor+1,f
  2918  0057  0AF9               	incf	___awmod@divisor,f
  2919  0058  1903               	skipnz
  2920  0059  0AFA               	incf	___awmod@divisor+1,f
  2921  005A                     l1892:
  2922  005A  0879               	movf	___awmod@divisor,w
  2923  005B  047A               	iorwf	___awmod@divisor+1,w
  2924  005C  1903               	btfsc	3,2
  2925  005D  285F               	goto	u911
  2926  005E  2860               	goto	u910
  2927  005F                     u911:
  2928  005F  288F               	goto	l1910
  2929  0060                     u910:
  2930  0060                     l1894:
  2931  0060  01A0               	clrf	___awmod@counter
  2932  0061  0AA0               	incf	___awmod@counter,f
  2933  0062  286E               	goto	l1900
  2934  0063                     l1896:
  2935  0063  3001               	movlw	1
  2936  0064                     u925:
  2937  0064  1003               	clrc
  2938  0065  0DF9               	rlf	___awmod@divisor,f
  2939  0066  0DFA               	rlf	___awmod@divisor+1,f
  2940  0067  3EFF               	addlw	-1
  2941  0068  1D03               	skipz
  2942  0069  2864               	goto	u925
  2943  006A                     l1898:
  2944  006A  3001               	movlw	1
  2945  006B  00FD               	movwf	??___awmod
  2946  006C  087D               	movf	??___awmod,w
  2947  006D  07A0               	addwf	___awmod@counter,f
  2948  006E                     l1900:
  2949  006E  1FFA               	btfss	___awmod@divisor+1,7
  2950  006F  2871               	goto	u931
  2951  0070  2872               	goto	u930
  2952  0071                     u931:
  2953  0071  2863               	goto	l1896
  2954  0072                     u930:
  2955  0072                     l1902:
  2956  0072  087A               	movf	___awmod@divisor+1,w
  2957  0073  027C               	subwf	___awmod@dividend+1,w
  2958  0074  1D03               	skipz
  2959  0075  2878               	goto	u945
  2960  0076  0879               	movf	___awmod@divisor,w
  2961  0077  027B               	subwf	___awmod@dividend,w
  2962  0078                     u945:
  2963  0078  1C03               	skipc
  2964  0079  287B               	goto	u941
  2965  007A  287C               	goto	u940
  2966  007B                     u941:
  2967  007B  2882               	goto	l1906
  2968  007C                     u940:
  2969  007C                     l1904:
  2970  007C  0879               	movf	___awmod@divisor,w
  2971  007D  02FB               	subwf	___awmod@dividend,f
  2972  007E  087A               	movf	___awmod@divisor+1,w
  2973  007F  1C03               	skipc
  2974  0080  03FC               	decf	___awmod@dividend+1,f
  2975  0081  02FC               	subwf	___awmod@dividend+1,f
  2976  0082                     l1906:
  2977  0082  3001               	movlw	1
  2978  0083                     u955:
  2979  0083  1003               	clrc
  2980  0084  0CFA               	rrf	___awmod@divisor+1,f
  2981  0085  0CF9               	rrf	___awmod@divisor,f
  2982  0086  3EFF               	addlw	-1
  2983  0087  1D03               	skipz
  2984  0088  2883               	goto	u955
  2985  0089                     l1908:
  2986  0089  3001               	movlw	1
  2987  008A  02A0               	subwf	___awmod@counter,f
  2988  008B  1D03               	btfss	3,2
  2989  008C  288E               	goto	u961
  2990  008D  288F               	goto	u960
  2991  008E                     u961:
  2992  008E  2872               	goto	l1902
  2993  008F                     u960:
  2994  008F                     l1910:
  2995  008F  0821               	movf	___awmod@sign,w
  2996  0090  1903               	btfsc	3,2
  2997  0091  2893               	goto	u971
  2998  0092  2894               	goto	u970
  2999  0093                     u971:
  3000  0093  2899               	goto	l1914
  3001  0094                     u970:
  3002  0094                     l1912:
  3003  0094  09FB               	comf	___awmod@dividend,f
  3004  0095  09FC               	comf	___awmod@dividend+1,f
  3005  0096  0AFB               	incf	___awmod@dividend,f
  3006  0097  1903               	skipnz
  3007  0098  0AFC               	incf	___awmod@dividend+1,f
  3008  0099                     l1914:
  3009  0099  087C               	movf	___awmod@dividend+1,w
  3010  009A  00FA               	movwf	?___awmod+1
  3011  009B  087B               	movf	___awmod@dividend,w
  3012  009C  00F9               	movwf	?___awmod
  3013  009D                     l534:
  3014  009D  0008               	return
  3015  009E                     __end_of___awmod:
  3016                           
  3017                           	psect	text12
  3018  0161                     __ptext12:	
  3019 ;; *************** function ___awdiv *****************
  3020 ;; Defined at:
  3021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  divisor         2    0[COMMON] int 
  3024 ;;  dividend        2    2[COMMON] int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  quotient        2    7[COMMON] int 
  3027 ;;  sign            1    6[COMMON] unsigned char 
  3028 ;;  counter         1    5[COMMON] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2    0[COMMON] int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         4       0       0       0       0
  3039 ;;      Locals:         4       0       0       0       0
  3040 ;;      Temps:          1       0       0       0       0
  3041 ;;      Totals:         9       0       0       0       0
  3042 ;;Total ram usage:        9 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_conver1
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function ___awdiv
  3053  0161                     ___awdiv:
  3054  0161                     l1836:	
  3055                           ;incstack = 0
  3056                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3057                           
  3058  0161  01F6               	clrf	___awdiv@sign
  3059  0162                     l1838:
  3060  0162  1FF1               	btfss	___awdiv@divisor+1,7
  3061  0163  2965               	goto	u791
  3062  0164  2966               	goto	u790
  3063  0165                     u791:
  3064  0165  296D               	goto	l1844
  3065  0166                     u790:
  3066  0166                     l1840:
  3067  0166  09F0               	comf	___awdiv@divisor,f
  3068  0167  09F1               	comf	___awdiv@divisor+1,f
  3069  0168  0AF0               	incf	___awdiv@divisor,f
  3070  0169  1903               	skipnz
  3071  016A  0AF1               	incf	___awdiv@divisor+1,f
  3072  016B                     l1842:
  3073  016B  01F6               	clrf	___awdiv@sign
  3074  016C  0AF6               	incf	___awdiv@sign,f
  3075  016D                     l1844:
  3076  016D  1FF3               	btfss	___awdiv@dividend+1,7
  3077  016E  2970               	goto	u801
  3078  016F  2971               	goto	u800
  3079  0170                     u801:
  3080  0170  297A               	goto	l1850
  3081  0171                     u800:
  3082  0171                     l1846:
  3083  0171  09F2               	comf	___awdiv@dividend,f
  3084  0172  09F3               	comf	___awdiv@dividend+1,f
  3085  0173  0AF2               	incf	___awdiv@dividend,f
  3086  0174  1903               	skipnz
  3087  0175  0AF3               	incf	___awdiv@dividend+1,f
  3088  0176                     l1848:
  3089  0176  3001               	movlw	1
  3090  0177  00F4               	movwf	??___awdiv
  3091  0178  0874               	movf	??___awdiv,w
  3092  0179  06F6               	xorwf	___awdiv@sign,f
  3093  017A                     l1850:
  3094  017A  01F7               	clrf	___awdiv@quotient
  3095  017B  01F8               	clrf	___awdiv@quotient+1
  3096  017C                     l1852:
  3097  017C  0870               	movf	___awdiv@divisor,w
  3098  017D  0471               	iorwf	___awdiv@divisor+1,w
  3099  017E  1903               	btfsc	3,2
  3100  017F  2981               	goto	u811
  3101  0180  2982               	goto	u810
  3102  0181                     u811:
  3103  0181  29B9               	goto	l1872
  3104  0182                     u810:
  3105  0182                     l1854:
  3106  0182  01F5               	clrf	___awdiv@counter
  3107  0183  0AF5               	incf	___awdiv@counter,f
  3108  0184  2990               	goto	l1860
  3109  0185                     l1856:
  3110  0185  3001               	movlw	1
  3111  0186                     u825:
  3112  0186  1003               	clrc
  3113  0187  0DF0               	rlf	___awdiv@divisor,f
  3114  0188  0DF1               	rlf	___awdiv@divisor+1,f
  3115  0189  3EFF               	addlw	-1
  3116  018A  1D03               	skipz
  3117  018B  2986               	goto	u825
  3118  018C                     l1858:
  3119  018C  3001               	movlw	1
  3120  018D  00F4               	movwf	??___awdiv
  3121  018E  0874               	movf	??___awdiv,w
  3122  018F  07F5               	addwf	___awdiv@counter,f
  3123  0190                     l1860:
  3124  0190  1FF1               	btfss	___awdiv@divisor+1,7
  3125  0191  2993               	goto	u831
  3126  0192  2994               	goto	u830
  3127  0193                     u831:
  3128  0193  2985               	goto	l1856
  3129  0194                     u830:
  3130  0194                     l1862:
  3131  0194  3001               	movlw	1
  3132  0195                     u845:
  3133  0195  1003               	clrc
  3134  0196  0DF7               	rlf	___awdiv@quotient,f
  3135  0197  0DF8               	rlf	___awdiv@quotient+1,f
  3136  0198  3EFF               	addlw	-1
  3137  0199  1D03               	skipz
  3138  019A  2995               	goto	u845
  3139  019B  0871               	movf	___awdiv@divisor+1,w
  3140  019C  0273               	subwf	___awdiv@dividend+1,w
  3141  019D  1D03               	skipz
  3142  019E  29A1               	goto	u855
  3143  019F  0870               	movf	___awdiv@divisor,w
  3144  01A0  0272               	subwf	___awdiv@dividend,w
  3145  01A1                     u855:
  3146  01A1  1C03               	skipc
  3147  01A2  29A4               	goto	u851
  3148  01A3  29A5               	goto	u850
  3149  01A4                     u851:
  3150  01A4  29AC               	goto	l1868
  3151  01A5                     u850:
  3152  01A5                     l1864:
  3153  01A5  0870               	movf	___awdiv@divisor,w
  3154  01A6  02F2               	subwf	___awdiv@dividend,f
  3155  01A7  0871               	movf	___awdiv@divisor+1,w
  3156  01A8  1C03               	skipc
  3157  01A9  03F3               	decf	___awdiv@dividend+1,f
  3158  01AA  02F3               	subwf	___awdiv@dividend+1,f
  3159  01AB                     l1866:
  3160  01AB  1477               	bsf	___awdiv@quotient,0
  3161  01AC                     l1868:
  3162  01AC  3001               	movlw	1
  3163  01AD                     u865:
  3164  01AD  1003               	clrc
  3165  01AE  0CF1               	rrf	___awdiv@divisor+1,f
  3166  01AF  0CF0               	rrf	___awdiv@divisor,f
  3167  01B0  3EFF               	addlw	-1
  3168  01B1  1D03               	skipz
  3169  01B2  29AD               	goto	u865
  3170  01B3                     l1870:
  3171  01B3  3001               	movlw	1
  3172  01B4  02F5               	subwf	___awdiv@counter,f
  3173  01B5  1D03               	btfss	3,2
  3174  01B6  29B8               	goto	u871
  3175  01B7  29B9               	goto	u870
  3176  01B8                     u871:
  3177  01B8  2994               	goto	l1862
  3178  01B9                     u870:
  3179  01B9                     l1872:
  3180  01B9  0876               	movf	___awdiv@sign,w
  3181  01BA  1903               	btfsc	3,2
  3182  01BB  29BD               	goto	u881
  3183  01BC  29BE               	goto	u880
  3184  01BD                     u881:
  3185  01BD  29C3               	goto	l1876
  3186  01BE                     u880:
  3187  01BE                     l1874:
  3188  01BE  09F7               	comf	___awdiv@quotient,f
  3189  01BF  09F8               	comf	___awdiv@quotient+1,f
  3190  01C0  0AF7               	incf	___awdiv@quotient,f
  3191  01C1  1903               	skipnz
  3192  01C2  0AF8               	incf	___awdiv@quotient+1,f
  3193  01C3                     l1876:
  3194  01C3  0878               	movf	___awdiv@quotient+1,w
  3195  01C4  00F1               	movwf	?___awdiv+1
  3196  01C5  0877               	movf	___awdiv@quotient,w
  3197  01C6  00F0               	movwf	?___awdiv
  3198  01C7                     l521:
  3199  01C7  0008               	return
  3200  01C8                     __end_of___awdiv:
  3201                           
  3202                           	psect	text13
  3203  023F                     __ptext13:	
  3204 ;; *************** function _conver *****************
  3205 ;; Defined at:
  3206 ;;		line 225 in file "main.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  temporal       16   16[BANK0 ] unsigned char [16]
  3211 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      PTR const unsigned char 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         0      32       0       0       0
  3223 ;;      Temps:          1       0       0       0       0
  3224 ;;      Totals:         1      32       0       0       0
  3225 ;;Total ram usage:       33 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _conver
  3236  023F                     _conver:
  3237  023F                     l2060:	
  3238                           ;incstack = 0
  3239                           ; Regs used in _conver: [wreg+status,2+status,0]
  3240                           
  3241                           
  3242                           ;main.c: 226:     if (CERRADO==0){
  3243  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0241  0847               	movf	_CERRADO,w
  3246  0242  1D03               	btfss	3,2
  3247  0243  2A45               	goto	u1031
  3248  0244  2A46               	goto	u1030
  3249  0245                     u1031:
  3250  0245  2A88               	goto	l2068
  3251  0246                     u1030:
  3252  0246                     l2062:
  3253                           
  3254                           ;main.c: 227:         char temporal[16];;main.c: 228:         temporal[0] = 0x50;
  3255  0246  3050               	movlw	80
  3256  0247  00F0               	movwf	??_conver
  3257  0248  0870               	movf	??_conver,w
  3258  0249  00A0               	movwf	conver@temporal
  3259                           
  3260                           ;main.c: 229:         temporal[1] = 0x41;
  3261  024A  3041               	movlw	65
  3262  024B  00F0               	movwf	??_conver
  3263  024C  0870               	movf	??_conver,w
  3264  024D  00A1               	movwf	conver@temporal+1
  3265                           
  3266                           ;main.c: 230:         temporal[2] = 0x52;
  3267  024E  3052               	movlw	82
  3268  024F  00F0               	movwf	??_conver
  3269  0250  0870               	movf	??_conver,w
  3270  0251  00A2               	movwf	conver@temporal+2
  3271                           
  3272                           ;main.c: 231:         temporal[3] = 0x51;
  3273  0252  3051               	movlw	81
  3274  0253  00F0               	movwf	??_conver
  3275  0254  0870               	movf	??_conver,w
  3276  0255  00A3               	movwf	conver@temporal+3
  3277                           
  3278                           ;main.c: 232:         temporal[4] = 0x55;
  3279  0256  3055               	movlw	85
  3280  0257  00F0               	movwf	??_conver
  3281  0258  0870               	movf	??_conver,w
  3282  0259  00A4               	movwf	conver@temporal+4
  3283                           
  3284                           ;main.c: 233:         temporal[5] = 0x45;
  3285  025A  3045               	movlw	69
  3286  025B  00F0               	movwf	??_conver
  3287  025C  0870               	movf	??_conver,w
  3288  025D  00A5               	movwf	conver@temporal+5
  3289                           
  3290                           ;main.c: 234:         temporal[6] = 0x4F;
  3291  025E  304F               	movlw	79
  3292  025F  00F0               	movwf	??_conver
  3293  0260  0870               	movf	??_conver,w
  3294  0261  00A6               	movwf	conver@temporal+6
  3295                           
  3296                           ;main.c: 235:         temporal[7] = 0x53;
  3297  0262  3053               	movlw	83
  3298  0263  00F0               	movwf	??_conver
  3299  0264  0870               	movf	??_conver,w
  3300  0265  00A7               	movwf	conver@temporal+7
  3301                           
  3302                           ;main.c: 236:         temporal[8] = 0x3A;
  3303  0266  303A               	movlw	58
  3304  0267  00F0               	movwf	??_conver
  3305  0268  0870               	movf	??_conver,w
  3306  0269  00A8               	movwf	conver@temporal+8
  3307                           
  3308                           ;main.c: 237:         temporal[9] = 0X20;
  3309  026A  3020               	movlw	32
  3310  026B  00F0               	movwf	??_conver
  3311  026C  0870               	movf	??_conver,w
  3312  026D  00A9               	movwf	conver@temporal+9
  3313                           
  3314                           ;main.c: 238:         temporal[10] = 0x30;
  3315  026E  3030               	movlw	48
  3316  026F  00F0               	movwf	??_conver
  3317  0270  0870               	movf	??_conver,w
  3318  0271  00AA               	movwf	conver@temporal+10
  3319                           
  3320                           ;main.c: 239:         temporal[11] = NUM;
  3321  0272  0854               	movf	_NUM,w
  3322  0273  00F0               	movwf	??_conver
  3323  0274  0870               	movf	??_conver,w
  3324  0275  00AB               	movwf	conver@temporal+11
  3325                           
  3326                           ;main.c: 240:         temporal[12] = 0x20;
  3327  0276  3020               	movlw	32
  3328  0277  00F0               	movwf	??_conver
  3329  0278  0870               	movf	??_conver,w
  3330  0279  00AC               	movwf	conver@temporal+12
  3331                           
  3332                           ;main.c: 241:         temporal[13] = 0x20;
  3333  027A  3020               	movlw	32
  3334  027B  00F0               	movwf	??_conver
  3335  027C  0870               	movf	??_conver,w
  3336  027D  00AD               	movwf	conver@temporal+13
  3337                           
  3338                           ;main.c: 242:         temporal[14] = 0x20;
  3339  027E  3020               	movlw	32
  3340  027F  00F0               	movwf	??_conver
  3341  0280  0870               	movf	??_conver,w
  3342  0281  00AE               	movwf	conver@temporal+14
  3343                           
  3344                           ;main.c: 243:         temporal[15] = 0x20;
  3345  0282  3020               	movlw	32
  3346  0283  00F0               	movwf	??_conver
  3347  0284  0870               	movf	??_conver,w
  3348  0285  00AF               	movwf	conver@temporal+15
  3349                           
  3350                           ;main.c: 244:         return temporal;
  3351  0286  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  3352  0287  2AC9               	goto	l101
  3353  0288                     l2068:
  3354                           
  3355                           ;main.c: 247:         char temporal[16];;main.c: 248:         temporal[0] = 0x43;
  3356  0288  3043               	movlw	67
  3357  0289  00F0               	movwf	??_conver
  3358  028A  0870               	movf	??_conver,w
  3359  028B  00B0               	movwf	conver@temporal_131
  3360                           
  3361                           ;main.c: 249:         temporal[1] = 0x45;
  3362  028C  3045               	movlw	69
  3363  028D  00F0               	movwf	??_conver
  3364  028E  0870               	movf	??_conver,w
  3365  028F  00B1               	movwf	conver@temporal_131+1
  3366                           
  3367                           ;main.c: 250:         temporal[2] = 0x52;
  3368  0290  3052               	movlw	82
  3369  0291  00F0               	movwf	??_conver
  3370  0292  0870               	movf	??_conver,w
  3371  0293  00B2               	movwf	conver@temporal_131+2
  3372                           
  3373                           ;main.c: 251:         temporal[3] = 0x52;
  3374  0294  3052               	movlw	82
  3375  0295  00F0               	movwf	??_conver
  3376  0296  0870               	movf	??_conver,w
  3377  0297  00B3               	movwf	conver@temporal_131+3
  3378                           
  3379                           ;main.c: 252:         temporal[4] = 0x41;
  3380  0298  3041               	movlw	65
  3381  0299  00F0               	movwf	??_conver
  3382  029A  0870               	movf	??_conver,w
  3383  029B  00B4               	movwf	conver@temporal_131+4
  3384                           
  3385                           ;main.c: 253:         temporal[5] = 0x44;
  3386  029C  3044               	movlw	68
  3387  029D  00F0               	movwf	??_conver
  3388  029E  0870               	movf	??_conver,w
  3389  029F  00B5               	movwf	conver@temporal_131+5
  3390                           
  3391                           ;main.c: 254:         temporal[6] = 0x4F;
  3392  02A0  304F               	movlw	79
  3393  02A1  00F0               	movwf	??_conver
  3394  02A2  0870               	movf	??_conver,w
  3395  02A3  00B6               	movwf	conver@temporal_131+6
  3396                           
  3397                           ;main.c: 255:         temporal[7] = 0x20;
  3398  02A4  3020               	movlw	32
  3399  02A5  00F0               	movwf	??_conver
  3400  02A6  0870               	movf	??_conver,w
  3401  02A7  00B7               	movwf	conver@temporal_131+7
  3402                           
  3403                           ;main.c: 256:         temporal[8] = 0x20;
  3404  02A8  3020               	movlw	32
  3405  02A9  00F0               	movwf	??_conver
  3406  02AA  0870               	movf	??_conver,w
  3407  02AB  00B8               	movwf	conver@temporal_131+8
  3408                           
  3409                           ;main.c: 257:         temporal[9] = 0X20;
  3410  02AC  3020               	movlw	32
  3411  02AD  00F0               	movwf	??_conver
  3412  02AE  0870               	movf	??_conver,w
  3413  02AF  00B9               	movwf	conver@temporal_131+9
  3414                           
  3415                           ;main.c: 258:         temporal[10] = 0x20;
  3416  02B0  3020               	movlw	32
  3417  02B1  00F0               	movwf	??_conver
  3418  02B2  0870               	movf	??_conver,w
  3419  02B3  00BA               	movwf	conver@temporal_131+10
  3420                           
  3421                           ;main.c: 259:         temporal[11] = 0x20;
  3422  02B4  3020               	movlw	32
  3423  02B5  00F0               	movwf	??_conver
  3424  02B6  0870               	movf	??_conver,w
  3425  02B7  00BB               	movwf	conver@temporal_131+11
  3426                           
  3427                           ;main.c: 260:         temporal[12] = 0x20;
  3428  02B8  3020               	movlw	32
  3429  02B9  00F0               	movwf	??_conver
  3430  02BA  0870               	movf	??_conver,w
  3431  02BB  00BC               	movwf	conver@temporal_131+12
  3432                           
  3433                           ;main.c: 261:         temporal[13] = 0x20;
  3434  02BC  3020               	movlw	32
  3435  02BD  00F0               	movwf	??_conver
  3436  02BE  0870               	movf	??_conver,w
  3437  02BF  00BD               	movwf	conver@temporal_131+13
  3438                           
  3439                           ;main.c: 262:         temporal[14] = 0x20;
  3440  02C0  3020               	movlw	32
  3441  02C1  00F0               	movwf	??_conver
  3442  02C2  0870               	movf	??_conver,w
  3443  02C3  00BE               	movwf	conver@temporal_131+14
  3444                           
  3445                           ;main.c: 263:         temporal[15] = 0x20;
  3446  02C4  3020               	movlw	32
  3447  02C5  00F0               	movwf	??_conver
  3448  02C6  0870               	movf	??_conver,w
  3449  02C7  00BF               	movwf	conver@temporal_131+15
  3450                           
  3451                           ;main.c: 264:         return temporal;
  3452  02C8  3030               	movlw	(low (conver@temporal_131| 0))& (0+255)
  3453  02C9                     l101:
  3454  02C9  0008               	return
  3455  02CA                     __end_of_conver:
  3456                           
  3457                           	psect	text14
  3458  0E95                     __ptext14:	
  3459 ;; *************** function _Lcd_Write_String *****************
  3460 ;; Defined at:
  3461 ;;		line 98 in file "LCD.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  a               1    wreg     PTR unsigned char 
  3464 ;;		 -> conver1@temporal(16), conver@temporal_131(16), conver@temporal(16), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  a               1    8[COMMON] PTR unsigned char 
  3467 ;;		 -> conver1@temporal(16), conver@temporal_131(16), conver@temporal(16), 
  3468 ;;  i               2    6[COMMON] int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       0       0       0       0
  3479 ;;      Locals:         3       0       0       0       0
  3480 ;;      Temps:          1       0       0       0       0
  3481 ;;      Totals:         4       0       0       0       0
  3482 ;;Total ram usage:        4 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 2
  3485 ;; This function calls:
  3486 ;;		_Lcd_Write_Char
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _Lcd_Write_String
  3494  0E95                     _Lcd_Write_String:
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3498                           ;Lcd_Write_String@a stored from wreg
  3499  0E95  00F8               	movwf	Lcd_Write_String@a
  3500  0E96                     l2052:
  3501                           
  3502                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3503  0E96  01F6               	clrf	Lcd_Write_String@i
  3504  0E97  01F7               	clrf	Lcd_Write_String@i+1
  3505  0E98  2EAA               	goto	l2058
  3506  0E99                     l2054:
  3507                           
  3508                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  3509  0E99  0876               	movf	Lcd_Write_String@i,w
  3510  0E9A  0778               	addwf	Lcd_Write_String@a,w
  3511  0E9B  00F5               	movwf	??_Lcd_Write_String
  3512  0E9C  0875               	movf	??_Lcd_Write_String,w
  3513  0E9D  0084               	movwf	4
  3514  0E9E  0800               	movf	0,w
  3515  0E9F  120A  158A  2775  120A  158A  	fcall	_Lcd_Write_Char
  3516  0EA4                     l2056:
  3517  0EA4  3001               	movlw	1
  3518  0EA5  07F6               	addwf	Lcd_Write_String@i,f
  3519  0EA6  1803               	skipnc
  3520  0EA7  0AF7               	incf	Lcd_Write_String@i+1,f
  3521  0EA8  3000               	movlw	0
  3522  0EA9  07F7               	addwf	Lcd_Write_String@i+1,f
  3523  0EAA                     l2058:
  3524  0EAA  0876               	movf	Lcd_Write_String@i,w
  3525  0EAB  0778               	addwf	Lcd_Write_String@a,w
  3526  0EAC  00F5               	movwf	??_Lcd_Write_String
  3527  0EAD  0875               	movf	??_Lcd_Write_String,w
  3528  0EAE  0084               	movwf	4
  3529  0EAF  1383               	bcf	3,7	;select IRP bank0
  3530  0EB0  0800               	movf	0,w
  3531  0EB1  1D03               	btfss	3,2
  3532  0EB2  2EB4               	goto	u1021
  3533  0EB3  2EB5               	goto	u1020
  3534  0EB4                     u1021:
  3535  0EB4  2E99               	goto	l2054
  3536  0EB5                     u1020:
  3537  0EB5                     l276:
  3538  0EB5  0008               	return
  3539  0EB6                     __end_of_Lcd_Write_String:
  3540                           
  3541                           	psect	text15
  3542  0F75                     __ptext15:	
  3543 ;; *************** function _Lcd_Write_Char *****************
  3544 ;; Defined at:
  3545 ;;		line 83 in file "LCD.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  a               1    wreg     unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  a               1    4[COMMON] unsigned char 
  3550 ;;  y               1    3[COMMON] unsigned char 
  3551 ;;  temp            1    2[COMMON] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       0       0       0       0
  3562 ;;      Locals:         3       0       0       0       0
  3563 ;;      Temps:          1       0       0       0       0
  3564 ;;      Totals:         4       0       0       0       0
  3565 ;;Total ram usage:        4 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 1
  3568 ;; This function calls:
  3569 ;;		_Lcd_Port
  3570 ;; This function is called by:
  3571 ;;		_Lcd_Write_String
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _Lcd_Write_Char
  3577  0F75                     _Lcd_Write_Char:
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3581                           ;Lcd_Write_Char@a stored from wreg
  3582  0F75  00F4               	movwf	Lcd_Write_Char@a
  3583  0F76                     l1816:
  3584                           
  3585                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3586  0F76  0874               	movf	Lcd_Write_Char@a,w
  3587  0F77  390F               	andlw	15
  3588  0F78  00F1               	movwf	??_Lcd_Write_Char
  3589  0F79  0871               	movf	??_Lcd_Write_Char,w
  3590  0F7A  00F2               	movwf	Lcd_Write_Char@temp
  3591                           
  3592                           ;LCD.c: 86:     y = a & 0xF0;
  3593  0F7B  0874               	movf	Lcd_Write_Char@a,w
  3594  0F7C  39F0               	andlw	240
  3595  0F7D  00F1               	movwf	??_Lcd_Write_Char
  3596  0F7E  0871               	movf	??_Lcd_Write_Char,w
  3597  0F7F  00F3               	movwf	Lcd_Write_Char@y
  3598  0F80                     l1818:
  3599                           
  3600                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3601  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0F82  1508               	bsf	8,2	;volatile
  3604  0F83                     l1820:
  3605                           
  3606                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3607  0F83  0873               	movf	Lcd_Write_Char@y,w
  3608  0F84  00F1               	movwf	??_Lcd_Write_Char
  3609  0F85  3004               	movlw	4
  3610  0F86                     u785:
  3611  0F86  1003               	clrc
  3612  0F87  0CF1               	rrf	??_Lcd_Write_Char,f
  3613  0F88  3EFF               	addlw	-1
  3614  0F89  1D03               	skipz
  3615  0F8A  2F86               	goto	u785
  3616  0F8B  0871               	movf	??_Lcd_Write_Char,w
  3617  0F8C  120A  158A  26B6  120A  158A  	fcall	_Lcd_Port
  3618  0F91                     l1822:
  3619                           
  3620                           ;LCD.c: 89:     RD3 = 1;
  3621  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0F93  1588               	bsf	8,3	;volatile
  3624  0F94                     l1824:
  3625                           
  3626                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3627  0F94  301A               	movlw	26
  3628  0F95  00F1               	movwf	??_Lcd_Write_Char
  3629  0F96                     u1437:
  3630  0F96  0BF1               	decfsz	??_Lcd_Write_Char,f
  3631  0F97  2F96               	goto	u1437
  3632  0F98  0000               	nop
  3633  0F99                     l1826:
  3634                           
  3635                           ;LCD.c: 91:     RD3 = 0;
  3636  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0F9B  1188               	bcf	8,3	;volatile
  3639  0F9C                     l1828:
  3640                           
  3641                           ;LCD.c: 92:     Lcd_Port(temp);
  3642  0F9C  0872               	movf	Lcd_Write_Char@temp,w
  3643  0F9D  120A  158A  26B6  120A  158A  	fcall	_Lcd_Port
  3644  0FA2                     l1830:
  3645                           
  3646                           ;LCD.c: 93:     RD3 = 1;
  3647  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0FA4  1588               	bsf	8,3	;volatile
  3650  0FA5                     l1832:
  3651                           
  3652                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3653  0FA5  301A               	movlw	26
  3654  0FA6  00F1               	movwf	??_Lcd_Write_Char
  3655  0FA7                     u1447:
  3656  0FA7  0BF1               	decfsz	??_Lcd_Write_Char,f
  3657  0FA8  2FA7               	goto	u1447
  3658  0FA9  0000               	nop
  3659  0FAA                     l1834:
  3660                           
  3661                           ;LCD.c: 95:     RD3 = 0;
  3662  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  3664  0FAC  1188               	bcf	8,3	;volatile
  3665  0FAD                     l270:
  3666  0FAD  0008               	return
  3667  0FAE                     __end_of_Lcd_Write_Char:
  3668                           
  3669                           	psect	text16
  3670  0FAE                     __ptext16:	
  3671 ;; *************** function _Lcd_Set_Cursor *****************
  3672 ;; Defined at:
  3673 ;;		line 48 in file "LCD.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  a               1    wreg     unsigned char 
  3676 ;;  b               1    4[COMMON] unsigned char 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  a               1    7[COMMON] unsigned char 
  3679 ;;  temp            1   10[COMMON] unsigned char 
  3680 ;;  y               1    9[COMMON] unsigned char 
  3681 ;;  z               1    8[COMMON] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0, pclath, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         1       0       0       0       0
  3692 ;;      Locals:         4       0       0       0       0
  3693 ;;      Temps:          2       0       0       0       0
  3694 ;;      Totals:         7       0       0       0       0
  3695 ;;Total ram usage:        7 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 2
  3698 ;; This function calls:
  3699 ;;		_Lcd_Cmd
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _Lcd_Set_Cursor
  3707  0FAE                     _Lcd_Set_Cursor:
  3708                           
  3709                           ;incstack = 0
  3710                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3711                           ;Lcd_Set_Cursor@a stored from wreg
  3712  0FAE  00F7               	movwf	Lcd_Set_Cursor@a
  3713  0FAF                     l2024:
  3714                           
  3715                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3716  0FAF  0377               	decf	Lcd_Set_Cursor@a,w
  3717  0FB0  1D03               	btfss	3,2
  3718  0FB1  2FB3               	goto	u981
  3719  0FB2  2FB4               	goto	u980
  3720  0FB3                     u981:
  3721  0FB3  2FD7               	goto	l2034
  3722  0FB4                     u980:
  3723  0FB4                     l2026:
  3724                           
  3725                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3726  0FB4  0874               	movf	Lcd_Set_Cursor@b,w
  3727  0FB5  3E7F               	addlw	127
  3728  0FB6  00F5               	movwf	??_Lcd_Set_Cursor
  3729  0FB7  0875               	movf	??_Lcd_Set_Cursor,w
  3730  0FB8  00FA               	movwf	Lcd_Set_Cursor@temp
  3731                           
  3732                           ;LCD.c: 52:         z = temp >> 4;
  3733  0FB9  087A               	movf	Lcd_Set_Cursor@temp,w
  3734  0FBA  00F5               	movwf	??_Lcd_Set_Cursor
  3735  0FBB  3004               	movlw	4
  3736  0FBC                     u995:
  3737  0FBC  1003               	clrc
  3738  0FBD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3739  0FBE  3EFF               	addlw	-1
  3740  0FBF  1D03               	skipz
  3741  0FC0  2FBC               	goto	u995
  3742  0FC1  0875               	movf	??_Lcd_Set_Cursor,w
  3743  0FC2  00F6               	movwf	??_Lcd_Set_Cursor+1
  3744  0FC3  0876               	movf	??_Lcd_Set_Cursor+1,w
  3745  0FC4  00F8               	movwf	Lcd_Set_Cursor@z
  3746  0FC5                     l2028:
  3747                           
  3748                           ;LCD.c: 53:         y = temp & 0x0F;
  3749  0FC5  087A               	movf	Lcd_Set_Cursor@temp,w
  3750  0FC6  390F               	andlw	15
  3751  0FC7  00F5               	movwf	??_Lcd_Set_Cursor
  3752  0FC8  0875               	movf	??_Lcd_Set_Cursor,w
  3753  0FC9  00F9               	movwf	Lcd_Set_Cursor@y
  3754  0FCA                     l2030:
  3755                           
  3756                           ;LCD.c: 54:         Lcd_Cmd(z);
  3757  0FCA  0878               	movf	Lcd_Set_Cursor@z,w
  3758  0FCB  120A  158A  267B  120A  158A  	fcall	_Lcd_Cmd
  3759  0FD0                     l2032:
  3760                           
  3761                           ;LCD.c: 55:         Lcd_Cmd(y);
  3762  0FD0  0879               	movf	Lcd_Set_Cursor@y,w
  3763  0FD1  120A  158A  267B  120A  158A  	fcall	_Lcd_Cmd
  3764                           
  3765                           ;LCD.c: 56:     } else if (a == 2) {
  3766  0FD6  2FFF               	goto	l264
  3767  0FD7                     l2034:
  3768  0FD7  3002               	movlw	2
  3769  0FD8  0677               	xorwf	Lcd_Set_Cursor@a,w
  3770  0FD9  1D03               	btfss	3,2
  3771  0FDA  2FDC               	goto	u1001
  3772  0FDB  2FDD               	goto	u1000
  3773  0FDC                     u1001:
  3774  0FDC  2FFF               	goto	l264
  3775  0FDD                     u1000:
  3776  0FDD                     l2036:
  3777                           
  3778                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3779  0FDD  0874               	movf	Lcd_Set_Cursor@b,w
  3780  0FDE  3EBF               	addlw	191
  3781  0FDF  00F5               	movwf	??_Lcd_Set_Cursor
  3782  0FE0  0875               	movf	??_Lcd_Set_Cursor,w
  3783  0FE1  00FA               	movwf	Lcd_Set_Cursor@temp
  3784                           
  3785                           ;LCD.c: 58:         z = temp >> 4;
  3786  0FE2  087A               	movf	Lcd_Set_Cursor@temp,w
  3787  0FE3  00F5               	movwf	??_Lcd_Set_Cursor
  3788  0FE4  3004               	movlw	4
  3789  0FE5                     u1015:
  3790  0FE5  1003               	clrc
  3791  0FE6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3792  0FE7  3EFF               	addlw	-1
  3793  0FE8  1D03               	skipz
  3794  0FE9  2FE5               	goto	u1015
  3795  0FEA  0875               	movf	??_Lcd_Set_Cursor,w
  3796  0FEB  00F6               	movwf	??_Lcd_Set_Cursor+1
  3797  0FEC  0876               	movf	??_Lcd_Set_Cursor+1,w
  3798  0FED  00F8               	movwf	Lcd_Set_Cursor@z
  3799  0FEE                     l2038:
  3800                           
  3801                           ;LCD.c: 59:         y = temp & 0x0F;
  3802  0FEE  087A               	movf	Lcd_Set_Cursor@temp,w
  3803  0FEF  390F               	andlw	15
  3804  0FF0  00F5               	movwf	??_Lcd_Set_Cursor
  3805  0FF1  0875               	movf	??_Lcd_Set_Cursor,w
  3806  0FF2  00F9               	movwf	Lcd_Set_Cursor@y
  3807  0FF3                     l2040:
  3808                           
  3809                           ;LCD.c: 60:         Lcd_Cmd(z);
  3810  0FF3  0878               	movf	Lcd_Set_Cursor@z,w
  3811  0FF4  120A  158A  267B  120A  158A  	fcall	_Lcd_Cmd
  3812  0FF9                     l2042:
  3813                           
  3814                           ;LCD.c: 61:         Lcd_Cmd(y);
  3815  0FF9  0879               	movf	Lcd_Set_Cursor@y,w
  3816  0FFA  120A  158A  267B  120A  158A  	fcall	_Lcd_Cmd
  3817  0FFF                     l264:
  3818  0FFF  0008               	return
  3819  1000                     __end_of_Lcd_Set_Cursor:
  3820                           
  3821                           	psect	text17
  3822  009E                     __ptext17:	
  3823 ;; *************** function _Lcd_Init *****************
  3824 ;; Defined at:
  3825 ;;		line 65 in file "LCD.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          2       0       0       0       0
  3842 ;;      Totals:         2       0       0       0       0
  3843 ;;Total ram usage:        2 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 2
  3846 ;; This function calls:
  3847 ;;		_Lcd_Cmd
  3848 ;;		_Lcd_Port
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _Lcd_Init
  3856  009E                     _Lcd_Init:
  3857  009E                     l2012:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3860                           
  3861                           
  3862                           ;LCD.c: 66:     Lcd_Port(0x00);
  3863  009E  3000               	movlw	0
  3864  009F  120A  158A  26B6  120A  118A  	fcall	_Lcd_Port
  3865  00A4                     l2014:
  3866                           
  3867                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3868  00A4  3034               	movlw	52
  3869  00A5  00F5               	movwf	??_Lcd_Init+1
  3870  00A6  30F1               	movlw	241
  3871  00A7  00F4               	movwf	??_Lcd_Init
  3872  00A8                     u1457:
  3873  00A8  0BF4               	decfsz	??_Lcd_Init,f
  3874  00A9  28A8               	goto	u1457
  3875  00AA  0BF5               	decfsz	??_Lcd_Init+1,f
  3876  00AB  28A8               	goto	u1457
  3877  00AC  28AD               	nop2
  3878  00AD                     l2016:
  3879                           
  3880                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3881  00AD  3003               	movlw	3
  3882  00AE  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3883                           
  3884                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3885  00B3  300D               	movlw	13
  3886  00B4  00F5               	movwf	??_Lcd_Init+1
  3887  00B5  30FB               	movlw	251
  3888  00B6  00F4               	movwf	??_Lcd_Init
  3889  00B7                     u1467:
  3890  00B7  0BF4               	decfsz	??_Lcd_Init,f
  3891  00B8  28B7               	goto	u1467
  3892  00B9  0BF5               	decfsz	??_Lcd_Init+1,f
  3893  00BA  28B7               	goto	u1467
  3894  00BB  28BC               	nop2
  3895  00BC                     l2018:
  3896                           
  3897                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3898  00BC  3003               	movlw	3
  3899  00BD  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3900  00C2                     l2020:
  3901                           
  3902                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3903  00C2  301D               	movlw	29
  3904  00C3  00F5               	movwf	??_Lcd_Init+1
  3905  00C4  3091               	movlw	145
  3906  00C5  00F4               	movwf	??_Lcd_Init
  3907  00C6                     u1477:
  3908  00C6  0BF4               	decfsz	??_Lcd_Init,f
  3909  00C7  28C6               	goto	u1477
  3910  00C8  0BF5               	decfsz	??_Lcd_Init+1,f
  3911  00C9  28C6               	goto	u1477
  3912                           
  3913                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3914  00CA  3003               	movlw	3
  3915  00CB  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3916                           
  3917                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3918  00D0  3002               	movlw	2
  3919  00D1  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3920                           
  3921                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3922  00D6  3002               	movlw	2
  3923  00D7  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3924                           
  3925                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3926  00DC  3008               	movlw	8
  3927  00DD  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3928                           
  3929                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3930  00E2  3000               	movlw	0
  3931  00E3  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3932                           
  3933                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3934  00E8  300C               	movlw	12
  3935  00E9  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3936                           
  3937                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3938  00EE  3000               	movlw	0
  3939  00EF  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3940                           
  3941                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3942  00F4  3006               	movlw	6
  3943  00F5  120A  158A  267B  120A  118A  	fcall	_Lcd_Cmd
  3944  00FA                     l267:
  3945  00FA  0008               	return
  3946  00FB                     __end_of_Lcd_Init:
  3947                           
  3948                           	psect	text18
  3949  0E61                     __ptext18:	
  3950 ;; *************** function _Lcd_Clear *****************
  3951 ;; Defined at:
  3952 ;;		line 43 in file "LCD.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, pclath, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 2
  3973 ;; This function calls:
  3974 ;;		_Lcd_Cmd
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _Lcd_Clear
  3982  0E61                     _Lcd_Clear:
  3983  0E61                     l2022:	
  3984                           ;incstack = 0
  3985                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3986                           
  3987                           
  3988                           ;LCD.c: 44:     Lcd_Cmd(0);
  3989  0E61  3000               	movlw	0
  3990  0E62  120A  158A  267B  120A  158A  	fcall	_Lcd_Cmd
  3991                           
  3992                           ;LCD.c: 45:     Lcd_Cmd(1);
  3993  0E67  3001               	movlw	1
  3994  0E68  120A  158A  267B  120A  158A  	fcall	_Lcd_Cmd
  3995  0E6D                     l258:
  3996  0E6D  0008               	return
  3997  0E6E                     __end_of_Lcd_Clear:
  3998                           
  3999                           	psect	text19
  4000  0E7B                     __ptext19:	
  4001 ;; *************** function _Lcd_Cmd *****************
  4002 ;; Defined at:
  4003 ;;		line 35 in file "LCD.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  a               1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  a               1    3[COMMON] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, pclath, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         0       0       0       0       0
  4018 ;;      Locals:         1       0       0       0       0
  4019 ;;      Temps:          2       0       0       0       0
  4020 ;;      Totals:         3       0       0       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 1
  4024 ;; This function calls:
  4025 ;;		_Lcd_Port
  4026 ;; This function is called by:
  4027 ;;		_Lcd_Clear
  4028 ;;		_Lcd_Set_Cursor
  4029 ;;		_Lcd_Init
  4030 ;;		_Lcd_Shift_Right
  4031 ;;		_Lcd_Shift_Left
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _Lcd_Cmd
  4037  0E7B                     _Lcd_Cmd:
  4038                           
  4039                           ;incstack = 0
  4040                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4041                           ;Lcd_Cmd@a stored from wreg
  4042  0E7B  00F3               	movwf	Lcd_Cmd@a
  4043  0E7C                     l1806:
  4044                           
  4045                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  4046  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0E7E  1108               	bcf	8,2	;volatile
  4049  0E7F                     l1808:
  4050                           
  4051                           ;LCD.c: 37:     Lcd_Port(a);
  4052  0E7F  0873               	movf	Lcd_Cmd@a,w
  4053  0E80  120A  158A  26B6  120A  158A  	fcall	_Lcd_Port
  4054  0E85                     l1810:
  4055                           
  4056                           ;LCD.c: 38:     RD3 = 1;
  4057  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0E87  1588               	bsf	8,3	;volatile
  4060  0E88                     l1812:
  4061                           
  4062                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4063  0E88  300B               	movlw	11
  4064  0E89  00F2               	movwf	??_Lcd_Cmd+1
  4065  0E8A  3062               	movlw	98
  4066  0E8B  00F1               	movwf	??_Lcd_Cmd
  4067  0E8C                     u1487:
  4068  0E8C  0BF1               	decfsz	??_Lcd_Cmd,f
  4069  0E8D  2E8C               	goto	u1487
  4070  0E8E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  4071  0E8F  2E8C               	goto	u1487
  4072  0E90  0000               	nop
  4073  0E91                     l1814:
  4074                           
  4075                           ;LCD.c: 40:     RD3 = 0;
  4076  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0E93  1188               	bcf	8,3	;volatile
  4079  0E94                     l255:
  4080  0E94  0008               	return
  4081  0E95                     __end_of_Lcd_Cmd:
  4082                           
  4083                           	psect	text20
  4084  0EB6                     __ptext20:	
  4085 ;; *************** function _Lcd_Port *****************
  4086 ;; Defined at:
  4087 ;;		line 13 in file "LCD.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  a               1    wreg     unsigned char 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  a               1    0[COMMON] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         0       0       0       0       0
  4102 ;;      Locals:         1       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0
  4104 ;;      Totals:         1       0       0       0       0
  4105 ;;Total ram usage:        1 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_Lcd_Cmd
  4111 ;;		_Lcd_Init
  4112 ;;		_Lcd_Write_Char
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _Lcd_Port
  4118  0EB6                     _Lcd_Port:
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _Lcd_Port: [wreg]
  4122                           ;Lcd_Port@a stored from wreg
  4123  0EB6  00F0               	movwf	Lcd_Port@a
  4124  0EB7                     l1630:
  4125                           
  4126                           ;LCD.c: 14:     if (a & 1)
  4127  0EB7  1C70               	btfss	Lcd_Port@a,0
  4128  0EB8  2EBA               	goto	u651
  4129  0EB9  2EBB               	goto	u650
  4130  0EBA                     u651:
  4131  0EBA  2EBF               	goto	l244
  4132  0EBB                     u650:
  4133  0EBB                     l1632:
  4134                           
  4135                           ;LCD.c: 15:         RD4 = 1;
  4136  0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0EBD  1608               	bsf	8,4	;volatile
  4139  0EBE  2EC2               	goto	l245
  4140  0EBF                     l244:	
  4141                           ;LCD.c: 16:     else
  4142                           
  4143                           
  4144                           ;LCD.c: 17:         RD4 = 0;
  4145  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0EC1  1208               	bcf	8,4	;volatile
  4148  0EC2                     l245:
  4149                           
  4150                           ;LCD.c: 19:     if (a & 2)
  4151  0EC2  1CF0               	btfss	Lcd_Port@a,1
  4152  0EC3  2EC5               	goto	u661
  4153  0EC4  2EC6               	goto	u660
  4154  0EC5                     u661:
  4155  0EC5  2EC8               	goto	l246
  4156  0EC6                     u660:
  4157  0EC6                     l1634:
  4158                           
  4159                           ;LCD.c: 20:         RD5 = 1;
  4160  0EC6  1688               	bsf	8,5	;volatile
  4161  0EC7  2EC9               	goto	l247
  4162  0EC8                     l246:	
  4163                           ;LCD.c: 21:     else
  4164                           
  4165                           
  4166                           ;LCD.c: 22:         RD5 = 0;
  4167  0EC8  1288               	bcf	8,5	;volatile
  4168  0EC9                     l247:
  4169                           
  4170                           ;LCD.c: 24:     if (a & 4)
  4171  0EC9  1D70               	btfss	Lcd_Port@a,2
  4172  0ECA  2ECC               	goto	u671
  4173  0ECB  2ECD               	goto	u670
  4174  0ECC                     u671:
  4175  0ECC  2ECF               	goto	l248
  4176  0ECD                     u670:
  4177  0ECD                     l1636:
  4178                           
  4179                           ;LCD.c: 25:         RD6 = 1;
  4180  0ECD  1708               	bsf	8,6	;volatile
  4181  0ECE  2ED0               	goto	l249
  4182  0ECF                     l248:	
  4183                           ;LCD.c: 26:     else
  4184                           
  4185                           
  4186                           ;LCD.c: 27:         RD6 = 0;
  4187  0ECF  1308               	bcf	8,6	;volatile
  4188  0ED0                     l249:
  4189                           
  4190                           ;LCD.c: 29:     if (a & 8)
  4191  0ED0  1DF0               	btfss	Lcd_Port@a,3
  4192  0ED1  2ED3               	goto	u681
  4193  0ED2  2ED4               	goto	u680
  4194  0ED3                     u681:
  4195  0ED3  2ED6               	goto	l250
  4196  0ED4                     u680:
  4197  0ED4                     l1638:
  4198                           
  4199                           ;LCD.c: 30:         RD7 = 1;
  4200  0ED4  1788               	bsf	8,7	;volatile
  4201  0ED5  2ED7               	goto	l252
  4202  0ED6                     l250:	
  4203                           ;LCD.c: 31:     else
  4204                           
  4205                           
  4206                           ;LCD.c: 32:         RD7 = 0;
  4207  0ED6  1388               	bcf	8,7	;volatile
  4208  0ED7                     l252:
  4209  0ED7  0008               	return
  4210  0ED8                     __end_of_Lcd_Port:
  4211                           
  4212                           	psect	text21
  4213  045D                     __ptext21:	
  4214 ;; *************** function _LECT1 *****************
  4215 ;; Defined at:
  4216 ;;		line 290 in file "main.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4230 ;;      Params:         0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0
  4232 ;;      Temps:          1       0       0       0       0
  4233 ;;      Totals:         1       0       0       0       0
  4234 ;;Total ram usage:        1 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 1
  4237 ;; This function calls:
  4238 ;;		_num_ascii
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _LECT1
  4246  045D                     _LECT1:
  4247  045D                     l2072:	
  4248                           ;incstack = 0
  4249                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4250                           
  4251                           
  4252                           ;main.c: 291:     NUM = num_ascii(PARKH);
  4253  045D  1283               	bcf	3,5	;RP0=0, select bank0
  4254  045E  1303               	bcf	3,6	;RP1=0, select bank0
  4255  045F  0855               	movf	_PARKH,w
  4256  0460  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4257  0465  00F3               	movwf	??_LECT1
  4258  0466  0873               	movf	??_LECT1,w
  4259  0467  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0468  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0469  00D4               	movwf	_NUM
  4262  046A                     l2074:
  4263                           
  4264                           ;main.c: 292:     if (DIA == 1){
  4265  046A  0352               	decf	_DIA,w
  4266  046B  1D03               	btfss	3,2
  4267  046C  2C6E               	goto	u1041
  4268  046D  2C6F               	goto	u1040
  4269  046E                     u1041:
  4270  046E  2C7C               	goto	l2078
  4271  046F                     u1040:
  4272  046F                     l2076:
  4273                           
  4274                           ;main.c: 293:         C1 = 0x4C;
  4275  046F  304C               	movlw	76
  4276  0470  00F3               	movwf	??_LECT1
  4277  0471  0873               	movf	??_LECT1,w
  4278  0472  00CE               	movwf	_C1
  4279                           
  4280                           ;main.c: 294:         C2 = 0x75;
  4281  0473  3075               	movlw	117
  4282  0474  00F3               	movwf	??_LECT1
  4283  0475  0873               	movf	??_LECT1,w
  4284  0476  00CD               	movwf	_C2
  4285                           
  4286                           ;main.c: 295:         C3 = 0x6E;
  4287  0477  306E               	movlw	110
  4288  0478  00F3               	movwf	??_LECT1
  4289  0479  0873               	movf	??_LECT1,w
  4290  047A  00CC               	movwf	_C3
  4291                           
  4292                           ;main.c: 296:     }
  4293  047B  2CF0               	goto	l109
  4294  047C                     l2078:
  4295  047C  3002               	movlw	2
  4296  047D  0652               	xorwf	_DIA,w
  4297  047E  1D03               	btfss	3,2
  4298  047F  2C81               	goto	u1051
  4299  0480  2C82               	goto	u1050
  4300  0481                     u1051:
  4301  0481  2C8F               	goto	l2082
  4302  0482                     u1050:
  4303  0482                     l2080:
  4304                           
  4305                           ;main.c: 298:         C1 = 0x4D;
  4306  0482  304D               	movlw	77
  4307  0483  00F3               	movwf	??_LECT1
  4308  0484  0873               	movf	??_LECT1,w
  4309  0485  00CE               	movwf	_C1
  4310                           
  4311                           ;main.c: 299:         C2 = 0x61;
  4312  0486  3061               	movlw	97
  4313  0487  00F3               	movwf	??_LECT1
  4314  0488  0873               	movf	??_LECT1,w
  4315  0489  00CD               	movwf	_C2
  4316                           
  4317                           ;main.c: 300:         C3 = 0x72;
  4318  048A  3072               	movlw	114
  4319  048B  00F3               	movwf	??_LECT1
  4320  048C  0873               	movf	??_LECT1,w
  4321  048D  00CC               	movwf	_C3
  4322                           
  4323                           ;main.c: 301:     }
  4324  048E  2CF0               	goto	l109
  4325  048F                     l2082:
  4326  048F  3003               	movlw	3
  4327  0490  0652               	xorwf	_DIA,w
  4328  0491  1D03               	btfss	3,2
  4329  0492  2C94               	goto	u1061
  4330  0493  2C95               	goto	u1060
  4331  0494                     u1061:
  4332  0494  2CA2               	goto	l2086
  4333  0495                     u1060:
  4334  0495                     l2084:
  4335                           
  4336                           ;main.c: 303:         C1 = 0x4D;
  4337  0495  304D               	movlw	77
  4338  0496  00F3               	movwf	??_LECT1
  4339  0497  0873               	movf	??_LECT1,w
  4340  0498  00CE               	movwf	_C1
  4341                           
  4342                           ;main.c: 304:         C2 = 0x69;
  4343  0499  3069               	movlw	105
  4344  049A  00F3               	movwf	??_LECT1
  4345  049B  0873               	movf	??_LECT1,w
  4346  049C  00CD               	movwf	_C2
  4347                           
  4348                           ;main.c: 305:         C3 = 0x65;
  4349  049D  3065               	movlw	101
  4350  049E  00F3               	movwf	??_LECT1
  4351  049F  0873               	movf	??_LECT1,w
  4352  04A0  00CC               	movwf	_C3
  4353                           
  4354                           ;main.c: 306:     }
  4355  04A1  2CF0               	goto	l109
  4356  04A2                     l2086:
  4357  04A2  3004               	movlw	4
  4358  04A3  0652               	xorwf	_DIA,w
  4359  04A4  1D03               	btfss	3,2
  4360  04A5  2CA7               	goto	u1071
  4361  04A6  2CA8               	goto	u1070
  4362  04A7                     u1071:
  4363  04A7  2CB5               	goto	l2090
  4364  04A8                     u1070:
  4365  04A8                     l2088:
  4366                           
  4367                           ;main.c: 308:         C1 = 0x4A;
  4368  04A8  304A               	movlw	74
  4369  04A9  00F3               	movwf	??_LECT1
  4370  04AA  0873               	movf	??_LECT1,w
  4371  04AB  00CE               	movwf	_C1
  4372                           
  4373                           ;main.c: 309:         C2 = 0x75;
  4374  04AC  3075               	movlw	117
  4375  04AD  00F3               	movwf	??_LECT1
  4376  04AE  0873               	movf	??_LECT1,w
  4377  04AF  00CD               	movwf	_C2
  4378                           
  4379                           ;main.c: 310:         C3 = 0x65;
  4380  04B0  3065               	movlw	101
  4381  04B1  00F3               	movwf	??_LECT1
  4382  04B2  0873               	movf	??_LECT1,w
  4383  04B3  00CC               	movwf	_C3
  4384                           
  4385                           ;main.c: 311:     }
  4386  04B4  2CF0               	goto	l109
  4387  04B5                     l2090:
  4388  04B5  3005               	movlw	5
  4389  04B6  0652               	xorwf	_DIA,w
  4390  04B7  1D03               	btfss	3,2
  4391  04B8  2CBA               	goto	u1081
  4392  04B9  2CBB               	goto	u1080
  4393  04BA                     u1081:
  4394  04BA  2CC8               	goto	l2094
  4395  04BB                     u1080:
  4396  04BB                     l2092:
  4397                           
  4398                           ;main.c: 313:         C1 = 0x56;
  4399  04BB  3056               	movlw	86
  4400  04BC  00F3               	movwf	??_LECT1
  4401  04BD  0873               	movf	??_LECT1,w
  4402  04BE  00CE               	movwf	_C1
  4403                           
  4404                           ;main.c: 314:         C2 = 0x69;
  4405  04BF  3069               	movlw	105
  4406  04C0  00F3               	movwf	??_LECT1
  4407  04C1  0873               	movf	??_LECT1,w
  4408  04C2  00CD               	movwf	_C2
  4409                           
  4410                           ;main.c: 315:         C3 = 0x65;
  4411  04C3  3065               	movlw	101
  4412  04C4  00F3               	movwf	??_LECT1
  4413  04C5  0873               	movf	??_LECT1,w
  4414  04C6  00CC               	movwf	_C3
  4415                           
  4416                           ;main.c: 316:     }
  4417  04C7  2CF0               	goto	l109
  4418  04C8                     l2094:
  4419  04C8  3006               	movlw	6
  4420  04C9  0652               	xorwf	_DIA,w
  4421  04CA  1D03               	btfss	3,2
  4422  04CB  2CCD               	goto	u1091
  4423  04CC  2CCE               	goto	u1090
  4424  04CD                     u1091:
  4425  04CD  2CDB               	goto	l2098
  4426  04CE                     u1090:
  4427  04CE                     l2096:
  4428                           
  4429                           ;main.c: 318:         C1 = 0x53;
  4430  04CE  3053               	movlw	83
  4431  04CF  00F3               	movwf	??_LECT1
  4432  04D0  0873               	movf	??_LECT1,w
  4433  04D1  00CE               	movwf	_C1
  4434                           
  4435                           ;main.c: 319:         C2 = 0x61;
  4436  04D2  3061               	movlw	97
  4437  04D3  00F3               	movwf	??_LECT1
  4438  04D4  0873               	movf	??_LECT1,w
  4439  04D5  00CD               	movwf	_C2
  4440                           
  4441                           ;main.c: 320:         C3 = 0x62;
  4442  04D6  3062               	movlw	98
  4443  04D7  00F3               	movwf	??_LECT1
  4444  04D8  0873               	movf	??_LECT1,w
  4445  04D9  00CC               	movwf	_C3
  4446                           
  4447                           ;main.c: 321:     }
  4448  04DA  2CF0               	goto	l109
  4449  04DB                     l2098:
  4450  04DB  3007               	movlw	7
  4451  04DC  0652               	xorwf	_DIA,w
  4452  04DD  1D03               	btfss	3,2
  4453  04DE  2CE0               	goto	u1101
  4454  04DF  2CE1               	goto	u1100
  4455  04E0                     u1101:
  4456  04E0  2CF0               	goto	l115
  4457  04E1                     u1100:
  4458  04E1                     l2100:
  4459                           
  4460                           ;main.c: 323:         C1 = 0x44;
  4461  04E1  3044               	movlw	68
  4462  04E2  00F3               	movwf	??_LECT1
  4463  04E3  0873               	movf	??_LECT1,w
  4464  04E4  00CE               	movwf	_C1
  4465                           
  4466                           ;main.c: 324:         C2 = 0x6F;
  4467  04E5  306F               	movlw	111
  4468  04E6  00F3               	movwf	??_LECT1
  4469  04E7  0873               	movf	??_LECT1,w
  4470  04E8  00CD               	movwf	_C2
  4471                           
  4472                           ;main.c: 325:         C3 = 0x6D;
  4473  04E9  306D               	movlw	109
  4474  04EA  00F3               	movwf	??_LECT1
  4475  04EB  0873               	movf	??_LECT1,w
  4476  04EC  00CC               	movwf	_C3
  4477  04ED                     l2102:
  4478                           
  4479                           ;main.c: 326:         CERRADO = 1;
  4480  04ED  01C7               	clrf	_CERRADO
  4481  04EE  0AC7               	incf	_CERRADO,f
  4482  04EF  2CF0               	goto	l109
  4483  04F0                     l115:
  4484  04F0                     l109:
  4485                           
  4486                           ;main.c: 328:     if (HORA<10){
  4487  04F0  300A               	movlw	10
  4488  04F1  0251               	subwf	_HORA,w
  4489  04F2  1803               	skipnc
  4490  04F3  2CF5               	goto	u1111
  4491  04F4  2CF6               	goto	u1110
  4492  04F5                     u1111:
  4493  04F5  2D19               	goto	l2120
  4494  04F6                     u1110:
  4495  04F6                     l2104:
  4496                           
  4497                           ;main.c: 329:         DH = 0x30;
  4498  04F6  3030               	movlw	48
  4499  04F7  00F3               	movwf	??_LECT1
  4500  04F8  0873               	movf	??_LECT1,w
  4501  04F9  00CA               	movwf	_DH
  4502  04FA                     l2106:
  4503                           
  4504                           ;main.c: 330:         UH = num_ascii(HORA);
  4505  04FA  0851               	movf	_HORA,w
  4506  04FB  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4507  0500  00F3               	movwf	??_LECT1
  4508  0501  0873               	movf	??_LECT1,w
  4509  0502  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0503  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0504  00CB               	movwf	_UH
  4512  0505                     l2108:
  4513                           
  4514                           ;main.c: 331:         if (HORA<7){
  4515  0505  3007               	movlw	7
  4516  0506  0251               	subwf	_HORA,w
  4517  0507  1803               	skipnc
  4518  0508  2D0A               	goto	u1121
  4519  0509  2D0B               	goto	u1120
  4520  050A                     u1121:
  4521  050A  2D10               	goto	l2114
  4522  050B                     u1120:
  4523  050B                     l2110:
  4524                           
  4525                           ;main.c: 332:             PORTB = 0b11000000;
  4526  050B  30C0               	movlw	192
  4527  050C  0086               	movwf	6	;volatile
  4528  050D                     l2112:
  4529                           
  4530                           ;main.c: 333:             CERRADO = 1;
  4531  050D  01C7               	clrf	_CERRADO
  4532  050E  0AC7               	incf	_CERRADO,f
  4533                           
  4534                           ;main.c: 334:         }
  4535  050F  2D69               	goto	l2154
  4536  0510                     l2114:
  4537                           
  4538                           ;main.c: 336:             PORTB = 0;
  4539  0510  0186               	clrf	6	;volatile
  4540  0511                     l2116:
  4541                           
  4542                           ;main.c: 337:             if (DIA!=7){
  4543  0511  3007               	movlw	7
  4544  0512  0652               	xorwf	_DIA,w
  4545  0513  1903               	btfsc	3,2
  4546  0514  2D16               	goto	u1131
  4547  0515  2D17               	goto	u1130
  4548  0516                     u1131:
  4549  0516  2D69               	goto	l2154
  4550  0517                     u1130:
  4551  0517                     l2118:
  4552                           
  4553                           ;main.c: 338:                 CERRADO = 0;
  4554  0517  01C7               	clrf	_CERRADO
  4555  0518  2D69               	goto	l2154
  4556  0519                     l2120:
  4557  0519  301A               	movlw	26
  4558  051A  0251               	subwf	_HORA,w
  4559  051B  1803               	skipnc
  4560  051C  2D1E               	goto	u1141
  4561  051D  2D1F               	goto	u1140
  4562  051E                     u1141:
  4563  051E  2D45               	goto	l2138
  4564  051F                     u1140:
  4565  051F                     l2122:
  4566                           
  4567                           ;main.c: 343:         DH = 0x31;
  4568  051F  3031               	movlw	49
  4569  0520  00F3               	movwf	??_LECT1
  4570  0521  0873               	movf	??_LECT1,w
  4571  0522  00CA               	movwf	_DH
  4572  0523                     l2124:
  4573                           
  4574                           ;main.c: 344:         con = HORA-16;
  4575  0523  0851               	movf	_HORA,w
  4576  0524  3EF0               	addlw	240
  4577  0525  00F3               	movwf	??_LECT1
  4578  0526  0873               	movf	??_LECT1,w
  4579  0527  00C6               	movwf	_con
  4580  0528                     l2126:
  4581                           
  4582                           ;main.c: 345:         UH = num_ascii(con);
  4583  0528  0846               	movf	_con,w
  4584  0529  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4585  052E  00F3               	movwf	??_LECT1
  4586  052F  0873               	movf	??_LECT1,w
  4587  0530  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0531  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0532  00CB               	movwf	_UH
  4590  0533                     l2128:
  4591                           
  4592                           ;main.c: 346:         if (DIA!=7){
  4593  0533  3007               	movlw	7
  4594  0534  0652               	xorwf	_DIA,w
  4595  0535  1903               	btfsc	3,2
  4596  0536  2D38               	goto	u1151
  4597  0537  2D39               	goto	u1150
  4598  0538                     u1151:
  4599  0538  2D3A               	goto	l2132
  4600  0539                     u1150:
  4601  0539                     l2130:
  4602                           
  4603                           ;main.c: 347:             CERRADO = 0;
  4604  0539  01C7               	clrf	_CERRADO
  4605  053A                     l2132:
  4606                           
  4607                           ;main.c: 349:         if (con>7){
  4608  053A  3008               	movlw	8
  4609  053B  0246               	subwf	_con,w
  4610  053C  1C03               	skipc
  4611  053D  2D3F               	goto	u1161
  4612  053E  2D40               	goto	u1160
  4613  053F                     u1161:
  4614  053F  2D43               	goto	l2136
  4615  0540                     u1160:
  4616  0540                     l2134:
  4617                           
  4618                           ;main.c: 350:             PORTB = 0b11000000;
  4619  0540  30C0               	movlw	192
  4620  0541  0086               	movwf	6	;volatile
  4621                           
  4622                           ;main.c: 351:         }
  4623  0542  2D69               	goto	l2154
  4624  0543                     l2136:
  4625                           
  4626                           ;main.c: 353:             PORTB = 0;
  4627  0543  0186               	clrf	6	;volatile
  4628  0544  2D69               	goto	l2154
  4629  0545                     l2138:
  4630                           
  4631                           ;main.c: 357:         DH = 0x32;
  4632  0545  3032               	movlw	50
  4633  0546  00F3               	movwf	??_LECT1
  4634  0547  0873               	movf	??_LECT1,w
  4635  0548  00CA               	movwf	_DH
  4636  0549                     l2140:
  4637                           
  4638                           ;main.c: 358:         con = HORA-32;
  4639  0549  0851               	movf	_HORA,w
  4640  054A  3EE0               	addlw	224
  4641  054B  00F3               	movwf	??_LECT1
  4642  054C  0873               	movf	??_LECT1,w
  4643  054D  00C6               	movwf	_con
  4644  054E                     l2142:
  4645                           
  4646                           ;main.c: 359:         UH = num_ascii(con);
  4647  054E  0846               	movf	_con,w
  4648  054F  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4649  0554  00F3               	movwf	??_LECT1
  4650  0555  0873               	movf	??_LECT1,w
  4651  0556  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0557  1303               	bcf	3,6	;RP1=0, select bank0
  4653  0558  00CB               	movwf	_UH
  4654  0559                     l2144:
  4655                           
  4656                           ;main.c: 360:         PORTB = 0b11000000;
  4657  0559  30C0               	movlw	192
  4658  055A  0086               	movwf	6	;volatile
  4659  055B                     l2146:
  4660                           
  4661                           ;main.c: 361:         if (con>1){
  4662  055B  3002               	movlw	2
  4663  055C  0246               	subwf	_con,w
  4664  055D  1C03               	skipc
  4665  055E  2D60               	goto	u1171
  4666  055F  2D61               	goto	u1170
  4667  0560                     u1171:
  4668  0560  2D62               	goto	l2150
  4669  0561                     u1170:
  4670  0561  2D0D               	goto	l2112
  4671  0562                     l2150:
  4672                           
  4673                           ;main.c: 365:             if (DIA!=7){
  4674  0562  3007               	movlw	7
  4675  0563  0652               	xorwf	_DIA,w
  4676  0564  1903               	btfsc	3,2
  4677  0565  2D67               	goto	u1181
  4678  0566  2D68               	goto	u1180
  4679  0567                     u1181:
  4680  0567  2D69               	goto	l2154
  4681  0568                     u1180:
  4682  0568  2D17               	goto	l2118
  4683  0569                     l2154:
  4684                           
  4685                           ;main.c: 370:     if (MIN<10){
  4686  0569  300A               	movlw	10
  4687  056A  0250               	subwf	_MIN,w
  4688  056B  1803               	skipnc
  4689  056C  2D6E               	goto	u1191
  4690  056D  2D6F               	goto	u1190
  4691  056E                     u1191:
  4692  056E  2D7F               	goto	l2160
  4693  056F                     u1190:
  4694  056F                     l2156:
  4695                           
  4696                           ;main.c: 371:         DM = 0x30;
  4697  056F  3030               	movlw	48
  4698  0570  00F3               	movwf	??_LECT1
  4699  0571  0873               	movf	??_LECT1,w
  4700  0572  00C8               	movwf	_DM
  4701  0573                     l2158:
  4702                           
  4703                           ;main.c: 372:         UM = num_ascii(MIN);
  4704  0573  0850               	movf	_MIN,w
  4705  0574  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4706  0579  00F3               	movwf	??_LECT1
  4707  057A  0873               	movf	??_LECT1,w
  4708  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4709  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4710  057D  00C9               	movwf	_UM
  4711                           
  4712                           ;main.c: 373:     }
  4713  057E  2E06               	goto	l145
  4714  057F                     l2160:
  4715  057F  301A               	movlw	26
  4716  0580  0250               	subwf	_MIN,w
  4717  0581  1803               	skipnc
  4718  0582  2D84               	goto	u1201
  4719  0583  2D85               	goto	u1200
  4720  0584                     u1201:
  4721  0584  2D9A               	goto	l2168
  4722  0585                     u1200:
  4723  0585                     l2162:
  4724                           
  4725                           ;main.c: 375:         DM = 0x31;
  4726  0585  3031               	movlw	49
  4727  0586  00F3               	movwf	??_LECT1
  4728  0587  0873               	movf	??_LECT1,w
  4729  0588  00C8               	movwf	_DM
  4730  0589                     l2164:
  4731                           
  4732                           ;main.c: 376:         con = MIN-16;
  4733  0589  0850               	movf	_MIN,w
  4734  058A  3EF0               	addlw	240
  4735  058B  00F3               	movwf	??_LECT1
  4736  058C  0873               	movf	??_LECT1,w
  4737  058D  00C6               	movwf	_con
  4738  058E                     l2166:
  4739                           
  4740                           ;main.c: 377:         UM = num_ascii(con);
  4741  058E  0846               	movf	_con,w
  4742  058F  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4743  0594  00F3               	movwf	??_LECT1
  4744  0595  0873               	movf	??_LECT1,w
  4745  0596  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0597  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0598  00C9               	movwf	_UM
  4748                           
  4749                           ;main.c: 378:     }
  4750  0599  2E06               	goto	l145
  4751  059A                     l2168:
  4752  059A  302A               	movlw	42
  4753  059B  0250               	subwf	_MIN,w
  4754  059C  1803               	skipnc
  4755  059D  2D9F               	goto	u1211
  4756  059E  2DA0               	goto	u1210
  4757  059F                     u1211:
  4758  059F  2DB5               	goto	l2176
  4759  05A0                     u1210:
  4760  05A0                     l2170:
  4761                           
  4762                           ;main.c: 380:         DM = 0x32;
  4763  05A0  3032               	movlw	50
  4764  05A1  00F3               	movwf	??_LECT1
  4765  05A2  0873               	movf	??_LECT1,w
  4766  05A3  00C8               	movwf	_DM
  4767  05A4                     l2172:
  4768                           
  4769                           ;main.c: 381:         con = MIN-32;
  4770  05A4  0850               	movf	_MIN,w
  4771  05A5  3EE0               	addlw	224
  4772  05A6  00F3               	movwf	??_LECT1
  4773  05A7  0873               	movf	??_LECT1,w
  4774  05A8  00C6               	movwf	_con
  4775  05A9                     l2174:
  4776                           
  4777                           ;main.c: 382:         UM = num_ascii(con);
  4778  05A9  0846               	movf	_con,w
  4779  05AA  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4780  05AF  00F3               	movwf	??_LECT1
  4781  05B0  0873               	movf	??_LECT1,w
  4782  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  4783  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  4784  05B3  00C9               	movwf	_UM
  4785                           
  4786                           ;main.c: 383:     }
  4787  05B4  2E06               	goto	l145
  4788  05B5                     l2176:
  4789  05B5  303A               	movlw	58
  4790  05B6  0250               	subwf	_MIN,w
  4791  05B7  1803               	skipnc
  4792  05B8  2DBA               	goto	u1221
  4793  05B9  2DBB               	goto	u1220
  4794  05BA                     u1221:
  4795  05BA  2DD0               	goto	l2184
  4796  05BB                     u1220:
  4797  05BB                     l2178:
  4798                           
  4799                           ;main.c: 385:         DM = 0x33;
  4800  05BB  3033               	movlw	51
  4801  05BC  00F3               	movwf	??_LECT1
  4802  05BD  0873               	movf	??_LECT1,w
  4803  05BE  00C8               	movwf	_DM
  4804  05BF                     l2180:
  4805                           
  4806                           ;main.c: 386:         con = MIN-32-16;
  4807  05BF  0850               	movf	_MIN,w
  4808  05C0  3ED0               	addlw	208
  4809  05C1  00F3               	movwf	??_LECT1
  4810  05C2  0873               	movf	??_LECT1,w
  4811  05C3  00C6               	movwf	_con
  4812  05C4                     l2182:
  4813                           
  4814                           ;main.c: 387:         UM = num_ascii(con);
  4815  05C4  0846               	movf	_con,w
  4816  05C5  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4817  05CA  00F3               	movwf	??_LECT1
  4818  05CB  0873               	movf	??_LECT1,w
  4819  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  4820  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  4821  05CE  00C9               	movwf	_UM
  4822                           
  4823                           ;main.c: 388:     }
  4824  05CF  2E06               	goto	l145
  4825  05D0                     l2184:
  4826  05D0  304A               	movlw	74
  4827  05D1  0250               	subwf	_MIN,w
  4828  05D2  1803               	skipnc
  4829  05D3  2DD5               	goto	u1231
  4830  05D4  2DD6               	goto	u1230
  4831  05D5                     u1231:
  4832  05D5  2DEB               	goto	l2192
  4833  05D6                     u1230:
  4834  05D6                     l2186:
  4835                           
  4836                           ;main.c: 390:         DM = 0x34;
  4837  05D6  3034               	movlw	52
  4838  05D7  00F3               	movwf	??_LECT1
  4839  05D8  0873               	movf	??_LECT1,w
  4840  05D9  00C8               	movwf	_DM
  4841  05DA                     l2188:
  4842                           
  4843                           ;main.c: 391:         con = MIN-64;
  4844  05DA  0850               	movf	_MIN,w
  4845  05DB  3EC0               	addlw	192
  4846  05DC  00F3               	movwf	??_LECT1
  4847  05DD  0873               	movf	??_LECT1,w
  4848  05DE  00C6               	movwf	_con
  4849  05DF                     l2190:
  4850                           
  4851                           ;main.c: 392:         UM = num_ascii(con);
  4852  05DF  0846               	movf	_con,w
  4853  05E0  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4854  05E5  00F3               	movwf	??_LECT1
  4855  05E6  0873               	movf	??_LECT1,w
  4856  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  4857  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  4858  05E9  00C9               	movwf	_UM
  4859                           
  4860                           ;main.c: 393:     }
  4861  05EA  2E06               	goto	l145
  4862  05EB                     l2192:
  4863  05EB  305A               	movlw	90
  4864  05EC  0250               	subwf	_MIN,w
  4865  05ED  1803               	skipnc
  4866  05EE  2DF0               	goto	u1241
  4867  05EF  2DF1               	goto	u1240
  4868  05F0                     u1241:
  4869  05F0  2E06               	goto	l139
  4870  05F1                     u1240:
  4871  05F1                     l2194:
  4872                           
  4873                           ;main.c: 395:         DM = 0x35;
  4874  05F1  3035               	movlw	53
  4875  05F2  00F3               	movwf	??_LECT1
  4876  05F3  0873               	movf	??_LECT1,w
  4877  05F4  00C8               	movwf	_DM
  4878  05F5                     l2196:
  4879                           
  4880                           ;main.c: 396:         con = MIN-64-16;
  4881  05F5  0850               	movf	_MIN,w
  4882  05F6  3EB0               	addlw	176
  4883  05F7  00F3               	movwf	??_LECT1
  4884  05F8  0873               	movf	??_LECT1,w
  4885  05F9  00C6               	movwf	_con
  4886  05FA                     l2198:
  4887                           
  4888                           ;main.c: 397:         UM = num_ascii(con);
  4889  05FA  0846               	movf	_con,w
  4890  05FB  120A  118A  2004  120A  118A  	fcall	_num_ascii
  4891  0600  00F3               	movwf	??_LECT1
  4892  0601  0873               	movf	??_LECT1,w
  4893  0602  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0603  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0604  00C9               	movwf	_UM
  4896  0605  2E06               	goto	l145
  4897  0606                     l139:
  4898  0606                     l145:
  4899  0606  0008               	return
  4900  0607                     __end_of_LECT1:
  4901                           
  4902                           	psect	text22
  4903  0004                     __ptext22:	
  4904 ;; *************** function _num_ascii *****************
  4905 ;; Defined at:
  4906 ;;		line 3 in file "ASCII.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  num             1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  num             1    2[COMMON] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      unsigned char 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         1       0       0       0       0
  4922 ;;      Temps:          2       0       0       0       0
  4923 ;;      Totals:         3       0       0       0       0
  4924 ;;Total ram usage:        3 bytes
  4925 ;; Hardware stack levels used: 1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_LECT1
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _num_ascii
  4935  0004                     _num_ascii:
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  4939                           ;num_ascii@num stored from wreg
  4940  0004  00F2               	movwf	num_ascii@num
  4941  0005                     l1730:
  4942                           
  4943                           ;ASCII.c: 4:  switch(num){
  4944  0005  281A               	goto	l1800
  4945  0006                     l1732:
  4946                           
  4947                           ;ASCII.c: 6:   return 0x30;
  4948  0006  3030               	movlw	48
  4949  0007  2842               	goto	l150
  4950  0008                     l1744:
  4951                           
  4952                           ;ASCII.c: 14:   return 0x31;
  4953  0008  3031               	movlw	49
  4954  0009  2842               	goto	l150
  4955  000A                     l1750:
  4956                           
  4957                           ;ASCII.c: 18:   return 0x32;
  4958  000A  3032               	movlw	50
  4959  000B  2842               	goto	l150
  4960  000C                     l1756:
  4961                           
  4962                           ;ASCII.c: 22:   return 0x33;
  4963  000C  3033               	movlw	51
  4964  000D  2842               	goto	l150
  4965  000E                     l1762:
  4966                           
  4967                           ;ASCII.c: 26:   return 0x34;
  4968  000E  3034               	movlw	52
  4969  000F  2842               	goto	l150
  4970  0010                     l1768:
  4971                           
  4972                           ;ASCII.c: 30:   return 0x35;
  4973  0010  3035               	movlw	53
  4974  0011  2842               	goto	l150
  4975  0012                     l1774:
  4976                           
  4977                           ;ASCII.c: 34:   return 0x36;
  4978  0012  3036               	movlw	54
  4979  0013  2842               	goto	l150
  4980  0014                     l1780:
  4981                           
  4982                           ;ASCII.c: 38:   return 0x37;
  4983  0014  3037               	movlw	55
  4984  0015  2842               	goto	l150
  4985  0016                     l1786:
  4986                           
  4987                           ;ASCII.c: 42:   return 0x38;
  4988  0016  3038               	movlw	56
  4989  0017  2842               	goto	l150
  4990  0018                     l1792:
  4991                           
  4992                           ;ASCII.c: 46:   return 0x39;
  4993  0018  3039               	movlw	57
  4994  0019  2842               	goto	l150
  4995  001A                     l1800:
  4996  001A  0872               	movf	num_ascii@num,w
  4997  001B  00F0               	movwf	??_num_ascii
  4998  001C  01F1               	clrf	??_num_ascii+1
  4999                           
  5000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5001                           ; Switch size 1, requested type "simple"
  5002                           ; Number of cases is 1, Range of values is 0 to 0
  5003                           ; switch strategies available:
  5004                           ; Name         Instructions Cycles
  5005                           ; simple_byte            4     3 (average)
  5006                           ; direct_byte           11     8 (fixed)
  5007                           ; jumptable            260     6 (fixed)
  5008                           ;	Chosen strategy is simple_byte
  5009  001D  0871               	movf	??_num_ascii+1,w
  5010  001E  3A00               	xorlw	0	; case 0
  5011  001F  1903               	skipnz
  5012  0020  2822               	goto	l2366
  5013  0021  2806               	goto	l1732
  5014  0022                     l2366:
  5015                           
  5016                           ; Switch size 1, requested type "simple"
  5017                           ; Number of cases is 10, Range of values is 0 to 9
  5018                           ; switch strategies available:
  5019                           ; Name         Instructions Cycles
  5020                           ; simple_byte           31    16 (average)
  5021                           ; direct_byte           38     8 (fixed)
  5022                           ; jumptable            260     6 (fixed)
  5023                           ;	Chosen strategy is simple_byte
  5024  0022  0870               	movf	??_num_ascii,w
  5025  0023  3A00               	xorlw	0	; case 0
  5026  0024  1903               	skipnz
  5027  0025  2806               	goto	l1732
  5028  0026  3A01               	xorlw	1	; case 1
  5029  0027  1903               	skipnz
  5030  0028  2808               	goto	l1744
  5031  0029  3A03               	xorlw	3	; case 2
  5032  002A  1903               	skipnz
  5033  002B  280A               	goto	l1750
  5034  002C  3A01               	xorlw	1	; case 3
  5035  002D  1903               	skipnz
  5036  002E  280C               	goto	l1756
  5037  002F  3A07               	xorlw	7	; case 4
  5038  0030  1903               	skipnz
  5039  0031  280E               	goto	l1762
  5040  0032  3A01               	xorlw	1	; case 5
  5041  0033  1903               	skipnz
  5042  0034  2810               	goto	l1768
  5043  0035  3A03               	xorlw	3	; case 6
  5044  0036  1903               	skipnz
  5045  0037  2812               	goto	l1774
  5046  0038  3A01               	xorlw	1	; case 7
  5047  0039  1903               	skipnz
  5048  003A  2814               	goto	l1780
  5049  003B  3A0F               	xorlw	15	; case 8
  5050  003C  1903               	skipnz
  5051  003D  2816               	goto	l1786
  5052  003E  3A01               	xorlw	1	; case 9
  5053  003F  1903               	skipnz
  5054  0040  2818               	goto	l1792
  5055  0041  2806               	goto	l1732
  5056  0042                     l150:
  5057  0042  0008               	return
  5058  0043                     __end_of_num_ascii:
  5059  007E                     btemp	set	126	;btemp
  5060  007E                     wtemp0	set	126
  5061                           
  5062                           	psect	config
  5063                           
  5064                           ;Config register CONFIG1 @ 0x2007
  5065                           ;	Oscillator Selection bits
  5066                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5067                           ;	Watchdog Timer Enable bit
  5068                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5069                           ;	Power-up Timer Enable bit
  5070                           ;	PWRTE = OFF, PWRT disabled
  5071                           ;	RE3/MCLR pin function select bit
  5072                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5073                           ;	Code Protection bit
  5074                           ;	CP = OFF, Program memory code protection is disabled
  5075                           ;	Data Code Protection bit
  5076                           ;	CPD = OFF, Data memory code protection is disabled
  5077                           ;	Brown Out Reset Selection bits
  5078                           ;	BOREN = OFF, BOR disabled
  5079                           ;	Internal External Switchover bit
  5080                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5081                           ;	Fail-Safe Clock Monitor Enabled bit
  5082                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5083                           ;	Low Voltage Programming Enable bit
  5084                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5085                           ;	In-Circuit Debugger Mode bit
  5086                           ;	DEBUG = 0x1, unprogrammed default
  5087  2007                     	org	8199
  5088  2007  20D4               	dw	8404
  5089                           
  5090                           ;Config register CONFIG2 @ 0x2008
  5091                           ;	Brown-out Reset Selection bit
  5092                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5093                           ;	Flash Program Memory Self Write Enable bits
  5094                           ;	WRT = OFF, Write protection off
  5095  2008                     	org	8200
  5096  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), conver@temporal_131(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal_131(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver1	PTR const unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _conver1->___awmod
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT1->_num_ascii

Critical Paths under _main in BANK0

    _main->_conver
    _setup->_I2C_Master_Init
    _conver1->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10051
                                             32 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _LECT1
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _conver
                            _conver1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    3541
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _osc_config
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2378
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _conver1                                             19    19      0    1437
                                              2 BANK0     19    19      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _conver                                              33    33      0     770
                                              0 COMMON     1     1      0
                                              0 BANK0     32    32      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                1     1      0      22
                                              3 COMMON     1     1      0
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LECT1
     _num_ascii
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conver
   _conver1
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _osc_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      44       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      44      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 01 12:49:54 2021

                        _a 0043                         _C1 004E                         _C2 004D  
                       _C3 004C                         _DH 004A                         _DM 0048  
                       l97 045C                         _UH 004B                         _UM 0049  
             ___awdiv@sign 0076                         fsr 0004                        l101 02C9  
                      l105 023E                        l115 04F0                        l211 0EFD  
                      l212 0F00                        l109 04F0                        l213 0F05  
                      l205 0E56                        l150 0042                        l208 0E60  
                      l145 0606                        l250 0ED6                        l139 0606  
                      l227 0F3C                        l252 0ED7                        l244 0EBF  
                      l404 0160                        l245 0EC2                        l246 0EC8  
                      l270 0FAD                        l190 0F74                        l247 0EC9  
                      l255 0E94                        l248 0ECF                        l264 0FFF  
                      l249 0ED0                        l521 01C7                        l193 0E6E  
                      l258 0E6D                        l267 00FA                        l276 0EB5  
                      l196 0E7A                        l534 009D                        l199 0E4D  
                      _DIA 0052                        _GIE 005F                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _MIN 0050                        u710 011F  
                      u630 0E74                        u711 011E                        u631 0E73  
                      u800 0171                        u640 0E7A                        u801 0170  
                      u705 0110                        u641 0E79                        u650 0EBB  
                      u810 0182                        u730 013A                        u651 0EBA  
                      u811 0181                        u731 0139                        u660 0EC6  
                      u900 0055                        u661 0EC5                        u901 0054  
                      u725 0121                        u670 0ECD                        u830 0194  
                      u910 0060                        u750 0158                        u671 0ECC  
                      u831 0193                        u911 005F                        u751 0157  
                      u735 0136                        u680 0ED4                        u760 0EF9  
                      u681 0ED3                        u825 0186                        u745 014A  
                      u761 0EF8                        u850 01A5                        u930 0072  
                      u690 010B                        u770 0F54                        u851 01A4  
                      u931 0071                        u691 010A                        u940 007C  
                      u845 0195                        u941 007B                        u925 0064  
                      u870 01B9                        u790 0166                        u871 01B8  
                      u855 01A1                        u791 0165                        u775 0F4F  
                      _NUM 0054                        u880 01BE                        u960 008F  
                      u785 0F86                        u881 01BD                        u865 01AD  
                      u961 008E                        u945 0078                        u970 0094  
                      u890 004A                        u971 0093                        u955 0083  
                      u891 0049                        u980 0FB4                        u981 0FB3  
                      u995 0FBC                        _con 0046                        fsr0 0004  
                      indf 0000               ___awmod@sign 0021                       l2000 0425  
                     l2010 0451                       l2002 0430                       l2100 04E1  
                     l2020 00C2                       l2012 009E                       l2004 0435  
                     l2110 050B                       l2102 04ED                       l2022 0E61  
                     l2014 00A4                       l2030 0FCA                       l2006 043E  
                     l2112 050D                       l2104 04F6                       l2120 0519  
                     l2016 00AD                       l2040 0FF3                       l2032 0FD0  
                     l2024 0FAF                       l2008 044C                       l2200 0607  
                     l2130 0539                       l2122 051F                       l2114 0510  
                     l2106 04FA                       l2018 00BC                       l2042 0FF9  
                     l2026 0FB4                       l2034 0FD7                       l2210 062D  
                     l2202 060C                       l2140 0549                       l2132 053A  
                     l2124 0523                       l2116 0511                       l2108 0505  
                     l2036 0FDD                       l2028 0FC5                       l2052 0E96  
                     l2060 023F                       l2044 01C8                       l2300 07AA  
                     l2220 0652                       l2212 0635                       l2204 0611  
                     l2150 0562                       l2142 054E                       l2134 0540  
                     l2126 0528                       l2118 0517                       l2038 0FEE  
                     l2054 0E99                       l2062 0246                       l2046 01F6  
                     l2310 07D1                       l2302 07B3                       l2230 067C  
                     l2222 065A                       l2214 063F                       l2206 0616  
                     l2160 057F                       l2144 0559                       l2136 0543  
                     l2128 0533                       l2080 0482                       l2072 045D  
                     l2056 0EA4                       l2048 021A                       l2312 07DF  
                     l2304 07B8                       l2240 06AC                       l2232 068A  
                     l2224 065F                       l2216 0644                       l2208 061B  
                     l2170 05A0                       l2162 0585                       l2146 055B  
                     l2138 0545                       l2154 0569                       l2090 04B5  
                     l2082 048F                       l2074 046A                       l2058 0EAA  
                     l2314 07E4                       l2306 07C3                       l2250 06D8  
                     l2242 06BA                       l2234 068F                       l2226 066E  
                     l2218 0649                       l2180 05BF                       l2172 05A4  
                     l2164 0589                       l2156 056F                       l2092 04BB  
                     l2084 0495                       l2076 046F                       l2068 0288  
                     l1700 0F16                       l2308 07C8                       l2260 0704  
                     l2252 06E6                       l2244 06BF                       l2236 069E  
                     l2228 0673                       l2190 05DF                       l2182 05C4  
                     l2174 05A9                       l2166 058E                       l2158 0573  
                     l2094 04C8                       l2086 04A2                       l2078 047C  
                     l1630 0EB7                       l1702 0F18                       l2270 072B  
                     l2262 070D                       l2254 06EB                       l2246 06CA  
                     l2238 06A3                       l1800 001A                       l2192 05EB  
                     l2184 05D0                       l2176 05B5                       l2168 059A  
                     l2096 04CE                       l2088 04A8                       l1632 0EBB  
                     l1640 00FB                       l1720 0F41                       l1704 0F1E  
                     l1712 0F26                       l2280 0757                       l2272 0739  
                     l2264 0712                       l2256 06F6                       l2248 06CF  
                     l1730 0005                       l2194 05F1                       l2186 05D6  
                     l2178 05BB                       l2098 04DB                       l1634 0EC6  
                     l1810 0E85                       l1650 0128                       l1642 010B  
                     l1722 0F44                       l1626 0E6E                       l1706 0F20  
                     l2290 077E                       l2282 0760                       l2274 073E  
                     l2266 071D                       l2258 06FB                       l1732 0006  
                     l2196 05F5                       l2188 05DA                       l1636 0ECD  
                     l1812 0E88                       l1820 0F83                       l1900 006E  
                     l1652 013A                       l1644 010E                       l1660 0158  
                     l1724 0F71                       l1628 0E74                       l2364 0F2E  
                     l1708 0F24                       l2292 078C                       l2284 0765  
                     l2276 0749                       l2268 0722                       l2366 0022  
                     l1750 000A                       l2198 05FA                       l1638 0ED4  
                     l1814 0E91                       l1806 0E7C                       l1830 0FA2  
                     l1822 0F91                       l1902 0072                       l1910 008F  
                     l1654 0148                       l1646 011B                       l1726 0F72  
                     l1718 0F3D                       l1670 0E5C                       l2294 0791  
                     l2286 0770                       l2278 074E                       l1744 0008  
                     l1808 0E7F                       l1832 0FA5                       l1824 0F94  
                     l1816 0F76                       l1840 0166                       l1912 0094  
                     l1904 007C                       l1656 0149                       l1648 011F  
                     l1728 0F73                       l1680 0EE5                       l1664 0E45  
                     l1672 0E4E                       l1920 02D9                       l2296 079C  
                     l2288 0775                       l1762 000E                       l1834 0FAA  
                     l1826 0F99                       l1818 0F80                       l1850 017A  
                     l1842 016B                       l1914 0099                       l1906 0082  
                     l1658 0152                       l1682 0EEE                       l1666 0E4A  
                     l1674 0E53                       l1930 0305                       l1922 02DF  
                     l2298 07A1                       l1780 0014                       l1756 000C  
                     l1828 0F9C                       l1860 0190                       l1852 017C  
                     l1844 016D                       l1836 0161                       l1908 0089  
                     l1684 0EF3                       l1676 0ED8                       l1668 0E57  
                     l1692 0F07                       l1940 032C                       l1932 030E  
                     l1924 02EE                       l1774 0012                       l1870 01B3  
                     l1862 0194                       l1854 0182                       l1846 0171  
                     l1838 0162                       l1686 0EF9                       l1678 0EDD  
                     l1694 0F08                       l1950 0358                       l1942 033A  
                     l1934 0313                       l1926 02F3                       l1918 02CA  
                     l1792 0018                       l1768 0010                       l1864 01A5  
                     l1856 0185                       l1872 01B9                       l1848 0176  
                     l1880 0043                       l1688 0F01                       l1696 0F0E  
                     l1960 037F                       l1952 0361                       l1944 033F  
                     l1936 031E                       l1928 02FC                       l1786 0016  
                     l1874 01BE                       l1866 01AB                       l1858 018C  
                     l1890 0055                       l1882 0046                       l1698 0F10  
                     l1970 03AB                       l1962 0388                       l1954 036A  
                     l1946 034A                       l1938 0323                       l1876 01C3  
                     l1868 01AC                       l1892 005A                       l1884 004A  
                     l1980 03D4                       l1972 03B4                       l1964 0396  
                     l1956 036F                       l1948 034F                       l1894 0060  
                     l1886 004F                       l1990 0400                       l1982 03D9  
                     l1974 03BC                       l1966 039B                       l1958 037A  
                     l1896 0063                       l1888 0051                       l1992 0405  
                     l1984 03E2                       l1976 03C4                       l1968 03A6  
                     l1898 006A                       l1994 040E                       l1986 03F0  
                     l1978 03C9                       l1996 0417                       l1988 03F5  
                     l1998 0420                       u1000 0FDD                       u1001 0FDC  
                     u1100 04E1                       u1020 0EB5                       u1101 04E0  
                     u1021 0EB4                       u1110 04F6                       u1030 0246  
                     u1111 04F5                       u1015 0FE5                       u1031 0245  
                     u1200 0585                       u1120 050B                       u1040 046F  
                     u1201 0584                       u1121 050A                       u1041 046E  
                     u1210 05A0                       u1130 0517                       u1050 0482  
                     u1211 059F                       u1131 0516                       u1051 0481  
                     u1220 05BB                       u1140 051F                       u1060 0495  
                     u1221 05BA                       u1141 051E                       u1061 0494  
                     u1230 05D6                       u1150 0539                       u1070 04A8  
                     u1231 05D5                       u1151 0538                       u1071 04A7  
                     u1240 05F1                       u1160 0540                       u1080 04BB  
                     u1241 05F0                       u1161 053F                       u1081 04BA  
                     u1170 0561                       u1090 04CE                       u1171 0560  
                     u1091 04CD                       u1307 0744                       u1180 0568  
                     u1181 0567                       u1317 076B                       u1190 056F  
                     u1191 056E                       u1407 03FB                       u1327 0797  
                     u1417 042B                       u1337 07BE                       u1257 0667  
                     u1427 0457                       u1347 07EA                       u1267 0697  
                     u1437 0F96                       u1357 0319                       u1277 06C5  
                     u1447 0FA7                       u1367 0345                       u1287 06F1  
                     u1457 00A8                       u1377 0375                       u1297 0718  
                     u1467 00B7                       u1387 03A1                       u1477 00C6  
                     u1397 03CF                       u1487 0E8C                       _HORA 0051  
                     _PEIE 005E                       _TEMP 004F          ?_Lcd_Write_String 0070  
                     _main 0607                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075             osc_config@freq 0072            __end_of_Lcd_Cmd 0E95  
          conver1@temporal 0025           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
          __end_of___awdiv 01C8            __end_of___awmod 009E                      _ANSEL 0188  
          __end_of___lldiv 0161            ___awdiv@divisor 0070                      _LECT1 045D  
                    _PARKH 0055            ___awdiv@counter 0075                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
          __end_of_conver1 023F                      _setup 02CA                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 00FB           __end_of_Lcd_Port 0ED8  
          __initialization 07F3               __end_of_main 07F3                     ??_main 0040  
       __size_of_Lcd_Clear 000D                     ?_LECT1 0070          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _BASURA 0053           ___awdiv@dividend 0072                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___awdiv 0074  
                ??___awmod 007D                  ??___lldiv 0078                     _conver 023F  
         ___awdiv@quotient 0077            ___awmod@divisor 0079            ___awmod@counter 0020  
                ??_conver1 0022         conver@temporal_131 0030            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 0E6E              __end_of_LECT1 0607  
           __pcstackCOMMON 0070              __end_of_setup 045D                    ??_LECT1 0073  
           _Lcd_Set_Cursor 0FAE                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0028                 __pbssBANK0 0043                 __pmaintext 0607  
                  ?_conver 0070  __size_of_Lcd_Write_String 0021     __end_of_Lcd_Set_Cursor 1000  
                  _CERRADO 0047         __size_of_num_ascii 003F                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
           _Lcd_Write_Char 0F75                    _Lcd_Cmd 0E7B                    ___awdiv 0161  
                  ___awmod 0043                    ___lldiv 00FB            __size_of_conver 008B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 02CA                    __ptext2 0F06  
                  __ptext3 0E57                    __ptext4 0E4E                    __ptext5 0E45  
                  __ptext6 0ED8                    __ptext7 0E6E                    __ptext8 0F3D  
                  __ptext9 00FB                    _conver1 01C8           ___awmod@dividend 007B  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 0E3E     __end_of_Lcd_Write_Char 0FAE  
     end_of_initialization 07FC                 _osc_config 0F06          __end_of_num_ascii 0043  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070                  _PORTDbits 0008                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078          Lcd_Write_String@i 0076  
                _Lcd_Clear 0E61           _Lcd_Write_String 0E95             __end_of_conver 02CA  
      start_initialization 07F3          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                ?_osc_config 0070                 ?_Lcd_Clear 0070  
                 ??_conver 0070            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 0E45           _I2C_Master_Write 0E57           ??_Lcd_Set_Cursor 0075  
                 ?___awdiv 0070                   ?___awmod 0079                   ?___lldiv 0070  
                 ?_conver1 0070             __size_of_LECT1 01AA        __size_of_osc_config 0037  
           conver@temporal 0020             __size_of_setup 0193                  clear_ram0 0E3D  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                  _num_ascii 0004  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 009E                   _Lcd_Port 0EB6  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0EB6           __size_of_Lcd_Cmd 001A  
               ?_num_ascii 0070           __size_of___awdiv 0067           __size_of___awmod 005B  
         __size_of___lldiv 0066           __size_of_conver1 0077            _I2C_Master_Init 0F3D  
          _I2C_Master_Read 0ED8            _I2C_Master_Wait 0E6E            _I2C_Master_Stop 0E4E  
                 __ptext10 01C8                   __ptext11 0043                   __ptext20 0EB6  
                 __ptext12 0161                   __ptext21 045D                   __ptext13 023F  
                 __ptext22 0004                   __ptext14 0E95                   __ptext15 0F75  
                 __ptext16 0FAE                   __ptext17 009E                   __ptext18 0E61  
                 __ptext19 0E7B               ??_osc_config 0070              __size_of_main 01EC  
 __end_of_I2C_Master_Start 0E4E   __end_of_I2C_Master_Write 0E61         __end_of_osc_config 0F3D  
       Lcd_Write_Char@temp 0072           ___lldiv@dividend 0074               num_ascii@num 0072  
               _OSCCONbits 008F                ??_num_ascii 0070    __end_of_I2C_Master_Init 0F75  
  __end_of_I2C_Master_Read 0F06    __end_of_I2C_Master_Wait 0E7B    __end_of_I2C_Master_Stop 0E57  
       Lcd_Set_Cursor@temp 007A                _temperatura 0045           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                _SSPCON2bits 0091  
